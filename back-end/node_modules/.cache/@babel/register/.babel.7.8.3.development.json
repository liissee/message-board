{
  "{\"sourceRoot\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"filename\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"plugins\":[],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors'; // Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\n\nconst port = process.env.PORT || 8080;\nconst app = express(); // Add middlewares to enable cors and json body parsing\n\napp.use(cors());\napp.use(bodyParser.json()); // Start defining your routes here\n\napp.get('/', (req, res) => {\n  res.send('Hello world');\n}); // Start the server\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImNvcnMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJhcHAiLCJ1c2UiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLGFBQXZCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLE1BQU1DLEdBQUcsR0FBR1AsT0FBTyxFQUFuQixDLENBRUE7O0FBQ0FPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTixJQUFJLEVBQVo7QUFDQUssR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1EsSUFBWCxFQUFSLEUsQ0FFQTs7QUFDQUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxhQUFUO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FOLEdBQUcsQ0FBQ08sTUFBSixDQUFXWCxJQUFYLEVBQWlCLE1BQU07QUFDckJZLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHNDQUFxQ2IsSUFBSyxFQUF2RDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xpbmRhaXNlbGwvRGVza3RvcC90ZWNobmlnby1ib290Y2FtcC9tZXNzYWdlLWJvYXJkL2JhY2stZW5kIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcblxuLy8gRGVmaW5lcyB0aGUgcG9ydCB0aGUgYXBwIHdpbGwgcnVuIG9uLiBEZWZhdWx0cyB0byA4MDgwLCBidXQgY2FuIGJlIFxuLy8gb3ZlcnJpZGRlbiB3aGVuIHN0YXJ0aW5nIHRoZSBzZXJ2ZXIuIEZvciBleGFtcGxlOlxuLy9cbi8vICAgUE9SVD05MDAwIG5wbSBzdGFydFxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MFxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbi8vIEFkZCBtaWRkbGV3YXJlcyB0byBlbmFibGUgY29ycyBhbmQganNvbiBib2R5IHBhcnNpbmdcbmFwcC51c2UoY29ycygpKVxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcblxuLy8gU3RhcnQgZGVmaW5pbmcgeW91ciByb3V0ZXMgaGVyZVxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnSGVsbG8gd29ybGQnKVxufSlcblxuLy8gU3RhcnQgdGhlIHNlcnZlclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,GAAG,GAAGP,OAAO,EAAnB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;AACAK,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACQ,IAAX,EAAR,E,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,CAFD,E,CAIA;;AACAN,GAAG,CAACO,MAAJ,CAAWX,IAAX,EAAiB,MAAM;AACrBY,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCb,IAAK,EAAvD;AACD,CAFD",
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1589787484777
  },
  "{\"sourceRoot\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"filename\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Setting up MongoDB database\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/messageBoard\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\n_mongoose[\"default\"].set('useCreateIndex', true);\n\nvar User = _mongoose[\"default\"].model('User', {\n  userName: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 5\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n});\n\nvar Message = _mongoose[\"default\"].model('Message', {\n  message: {\n    type: String,\n    required: true\n  },\n  parentId: {\n    type: String\n  },\n  author: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n}); // Add middlewares to enable cors and json body parsing\n\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: 'Service unavailabale'\n    });\n  }\n}); // MIDDLEWARE TO CHECK ACCESSTOKEN FOR USERS (IF THE USER MATCH ANY ACCESSTOKEN IN DB)\n\nvar authenticateUser =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return User.findOne({\n              accessToken: req.header('Authorization')\n            });\n\n          case 3:\n            user = _context.sent;\n\n            if (user) {\n              req.user = user;\n              next();\n            } else {\n              res.status(401).json({\n                loggedOut: true,\n                message: 'Please try to log in again'\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(403).json({\n              message: 'accesToken missing or wrong',\n              errors: _context.t0.errors\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Hello message board');\n}); //Create user\n\napp.post('/users',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, userName, email, password, user, saved;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, userName = _req$body.userName, email = _req$body.email, password = _req$body.password;\n            user = new User({\n              userName: userName,\n              email: email,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n            _context2.next = 5;\n            return user.save();\n\n          case 5:\n            saved = _context2.sent;\n            res.status(201).json(saved);\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(400).json({\n              message: 'Could not create user',\n              errors: _context2.t0.errors\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Login session\n\napp.post('/sessions',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return User.findOne({\n              userName: req.body.userName\n            });\n\n          case 2:\n            user = _context3.sent;\n\n            if (user && _bcryptNodejs[\"default\"].compareSync(req.body.password, user.password)) {\n              res.json({\n                userId: user._id,\n                accessToken: user.accessToken,\n                userName: user.userName\n              });\n            } else {\n              //Failure because user doesn't exist or encrypted password doesn't match\n              res.status(400).json({\n                notFound: true\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.get('/messages',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var messages;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Message.find().sort({\n              createdAt: 'desc'\n            }).limit(100);\n\n          case 2:\n            messages = _context4.sent;\n            res.status(200).json(messages);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //POST/SEND INFORMATION IN A REQUEST\n\napp.post(\"/messages/:id\", authenticateUser);\napp.post('/messages',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body2, message, author, parentId, postedMessage, savedMessage;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            //Retrieve the information sent by the client to our API endpoint\n            _req$body2 = req.body, message = _req$body2.message, author = _req$body2.author, parentId = _req$body2.parentId; //use our mongoose model to create the database entry\n\n            postedMessage = new Message({\n              message: message,\n              author: author,\n              parentId: parentId\n            });\n            _context5.prev = 2;\n            _context5.next = 5;\n            return postedMessage.save();\n\n          case 5:\n            savedMessage = _context5.sent;\n            res.status(204).json(savedMessage);\n            console.log(\"saved message:\", savedMessage);\n            _context5.next = 13;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](2);\n            //Bad request\n            res.status(400).json({\n              message: 'Could not save message to the database',\n              error: _context5.t0.errors\n            });\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 10]]);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); // Delete message\n\napp[\"delete\"](\"/messages/:id\", authenticateUser);\napp[\"delete\"](\"/messages/:id\",\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var messageId, author, userId, deletedMessage;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            messageId = req.params.id;\n            author = req.body.author;\n            userId = req.body.userId;\n\n            if (!(author === userId)) {\n              _context6.next = 17;\n              break;\n            }\n\n            _context6.prev = 4;\n            _context6.next = 7;\n            return Message.findOneAndDelete({\n              _id: messageId,\n              author: author\n            });\n\n          case 7:\n            deletedMessage = _context6.sent;\n\n            if (deletedMessage !== null) {\n              res.status(200).json({\n                message: \"Successfully deleted message with id: \".concat(deletedMessage._id)\n              });\n            } else {\n              res.status(400).json({\n                errorMessage: \"Couldn't delete message\"\n              });\n            }\n\n            _context6.next = 15;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](4);\n            res.status(400).json({\n              errorMessage: \"Couldn't delete message\",\n              error: _context6.t0.errors\n            });\n            console.log(_context6.t0);\n\n          case 15:\n            _context6.next = 18;\n            break;\n\n          case 17:\n            res.status(400).json({\n              errorMessage: \"Couldn't delete someone else's message\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[4, 11]]);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}()); // PUT ROUTE FOR SPECIFIC message ID\n\napp.put(\"/messages/:id\", authenticateUser);\napp.put('/messages/:id',\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(req, res) {\n    var messageId, author, userId, editedMessage;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            messageId = req.params.id;\n            author = req.body.author;\n            userId = req.body.userId;\n\n            if (!(author === userId)) {\n              _context7.next = 17;\n              break;\n            }\n\n            _context7.prev = 4;\n            _context7.next = 7;\n            return Message.findOneAndUpdate({\n              _id: messageId\n            }, req.body, {\n              \"new\": true\n            });\n\n          case 7:\n            editedMessage = _context7.sent;\n\n            if (editedMessage !== null) {\n              res.status(201).json(editedMessage); // res.status(201).json({ message: `Successfully edited message with id: ${editedMessage._id}` })\n\n              console.log(\"Editmessage\", editedMessage);\n            } else {\n              res.status(400).json({\n                errorMessage: \"Couldn't edit message\"\n              });\n              console.log(\"Editmessage2\", editedMessage);\n            }\n\n            _context7.next = 15;\n            break;\n\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](4);\n            res.status(400).json({\n              errorMessage: \"Couldn't edit message\",\n              error: _context7.t0.errors\n            });\n            console.log(\"3\", _context7.t0);\n\n          case 15:\n            _context7.next = 18;\n            break;\n\n          case 17:\n            res.status(400).json({\n              errorMessage: \"Couldn't edit someone else's message\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[4, 11]]);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "set",
        "User",
        "model",
        "userName",
        "type",
        "String",
        "required",
        "email",
        "unique",
        "password",
        "minlength",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "Message",
        "message",
        "parentId",
        "author",
        "Schema",
        "Types",
        "ObjectId",
        "ref",
        "createdAt",
        "Date",
        "now",
        "use",
        "bodyParser",
        "json",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "authenticateUser",
        "findOne",
        "header",
        "user",
        "loggedOut",
        "errors",
        "get",
        "send",
        "post",
        "body",
        "bcrypt",
        "hashSync",
        "save",
        "saved",
        "compareSync",
        "userId",
        "_id",
        "notFound",
        "find",
        "sort",
        "limit",
        "messages",
        "postedMessage",
        "savedMessage",
        "console",
        "log",
        "messageId",
        "params",
        "id",
        "findOneAndDelete",
        "deletedMessage",
        "errorMessage",
        "put",
        "findOneAndUpdate",
        "editedMessage",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACA,IAAMC,QAAQ,GAAGJ,OAAO,CAACC,GAAR,CAAYI,SAAZ,IAAyB,kCAA1C;;AACAC,qBAASC,OAAT,CAAiBH,QAAjB,EAA2B;AAAEI,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA3B;;AACAH,qBAASI,OAAT,GAAmBA,OAAnB;;AACAJ,qBAASK,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAL,qBAASK,GAAT,CAAa,gBAAb,EAA+B,IAA/B;;AAGA,IAAMC,IAAI,GAAGN,qBAASO,KAAT,CAAe,MAAf,EAAuB;AAClCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GADwB;AAKlCC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELG,IAAAA,MAAM,EAAE,IAFH;AAGLF,IAAAA,QAAQ,EAAE;AAHL,GAL2B;AAUlCG,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRI,IAAAA,SAAS,EAAE;AAHH,GAVwB;AAelCC,EAAAA,WAAW,EAAE;AACXP,IAAAA,IAAI,EAAEC,MADK;AAEX,eAAS;AAAA,aAAMO,mBAAOC,WAAP,CAAmB,GAAnB,EAAwBC,QAAxB,CAAiC,KAAjC,CAAN;AAAA;AAFE;AAfqB,CAAvB,CAAb;;AAqBA,IAAMC,OAAO,GAAGpB,qBAASO,KAAT,CAAe,SAAf,EAA0B;AACxCc,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAD+B;AAKxCW,EAAAA,QAAQ,EAAE;AACRb,IAAAA,IAAI,EAAEC;AADE,GAL8B;AAQxCa,EAAAA,MAAM,EAAE;AACNd,IAAAA,IAAI,EAAET,qBAASwB,MAAT,CAAgBC,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,GAAG,EAAE;AAFC,GARgC;AAYxCC,EAAAA,SAAS,EAAE;AACTnB,IAAAA,IAAI,EAAEoB,IADG;AAET,eAASA,IAAI,CAACC;AAFL;AAZ6B,CAA1B,CAAhB,C,CAkBA;;;AACAjC,GAAG,CAACkC,GAAJ,CAAQ,uBAAR;AACAlC,GAAG,CAACkC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACApC,GAAG,CAACkC,GAAJ,CAAQ,UAACG,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIpC,qBAASqC,UAAT,CAAoBC,UAApB,KAAmC,CAAvC,EAA0C;AACxCF,IAAAA,IAAI;AACL,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAArB;AACD;AACF,CAND,E,CAQA;;AACA,IAAMC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOP,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEF9B,IAAI,CAACoC,OAAL,CAAa;AAAE1B,cAAAA,WAAW,EAAEkB,GAAG,CAACS,MAAJ,CAAW,eAAX;AAAf,aAAb,CAFE;;AAAA;AAEfC,YAAAA,IAFe;;AAGrB,gBAAIA,IAAJ,EAAU;AACRV,cAAAA,GAAG,CAACU,IAAJ,GAAWA,IAAX;AACAR,cAAAA,IAAI;AACL,aAHD,MAGO;AACLD,cAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGN,IAFH,CAEQ;AAAEY,gBAAAA,SAAS,EAAE,IAAb;AAAmBxB,gBAAAA,OAAO,EAAE;AAA5B,eAFR;AAGD;;AAVoB;AAAA;;AAAA;AAAA;AAAA;AAYrBc,YAAAA,GAAG,CACAI,MADH,CACU,GADV,EAEGN,IAFH,CAEQ;AAAEZ,cAAAA,OAAO,EAAE,6BAAX;AAA0CyB,cAAAA,MAAM,EAAE,YAAIA;AAAtD,aAFR;;AAZqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBL,gBAAgB;AAAA;AAAA;AAAA,GAAtB,C,CAiBA;;;AACA5C,GAAG,CAACkD,GAAJ,CAAQ,GAAR,EAAa,UAACb,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACa,IAAJ,CAAS,qBAAT;AACD,CAFD,E,CAIA;;AACAnD,GAAG,CAACoD,IAAJ,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEuBD,GAAG,CAACgB,IAF3B,EAEP1C,QAFO,aAEPA,QAFO,EAEGI,KAFH,aAEGA,KAFH,EAEUE,QAFV,aAEUA,QAFV;AAGT8B,YAAAA,IAHS,GAGF,IAAItC,IAAJ,CAAS;AAAEE,cAAAA,QAAQ,EAARA,QAAF;AAAYI,cAAAA,KAAK,EAALA,KAAZ;AAAmBE,cAAAA,QAAQ,EAAEqC,yBAAOC,QAAP,CAAgBtC,QAAhB;AAA7B,aAAT,CAHE;AAAA;AAAA,mBAIK8B,IAAI,CAACS,IAAL,EAJL;;AAAA;AAITC,YAAAA,KAJS;AAKfnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBqB,KAArB;AALe;AAAA;;AAAA;AAAA;AAAA;AAOfnB,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEZ,cAAAA,OAAO,EAAE,uBAAX;AAAoCyB,cAAAA,MAAM,EAAE,aAAIA;AAAhD,aAArB;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,K,CAWA;;AACAjD,GAAG,CAACoD,IAAJ,CAAS,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD7B,IAAI,CAACoC,OAAL,CAAa;AAAElC,cAAAA,QAAQ,EAAE0B,GAAG,CAACgB,IAAJ,CAAS1C;AAArB,aAAb,CADC;;AAAA;AACdoC,YAAAA,IADc;;AAEpB,gBAAIA,IAAI,IAAIO,yBAAOI,WAAP,CAAmBrB,GAAG,CAACgB,IAAJ,CAASpC,QAA5B,EAAsC8B,IAAI,CAAC9B,QAA3C,CAAZ,EAAkE;AAChEqB,cAAAA,GAAG,CAACF,IAAJ,CAAS;AAAEuB,gBAAAA,MAAM,EAAEZ,IAAI,CAACa,GAAf;AAAoBzC,gBAAAA,WAAW,EAAE4B,IAAI,CAAC5B,WAAtC;AAAmDR,gBAAAA,QAAQ,EAAEoC,IAAI,CAACpC;AAAlE,eAAT;AACD,aAFD,MAEO;AACL;AACA2B,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEyB,gBAAAA,QAAQ,EAAE;AAAZ,eAArB;AACD;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAWA7D,GAAG,CAACkD,GAAJ,CAAQ,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEf,OAAO,CAACuC,IAAR,GAClBC,IADkB,CACb;AAAEhC,cAAAA,SAAS,EAAE;AAAb,aADa,EAElBiC,KAFkB,CAEZ,GAFY,CADF;;AAAA;AACfC,YAAAA,QADe;AAInB3B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB6B,QAArB;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,K,CAOA;;AACAjE,GAAG,CAACoD,IAAJ,CAAS,eAAT,EAA0BR,gBAA1B;AACA5C,GAAG,CAACoD,IAAJ,CAAS,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpB;AADoB,yBAEkBD,GAAG,CAACgB,IAFtB,EAEZ7B,OAFY,cAEZA,OAFY,EAEHE,MAFG,cAEHA,MAFG,EAEKD,QAFL,cAEKA,QAFL,EAGpB;;AACMyC,YAAAA,aAJc,GAIE,IAAI3C,OAAJ,CAAY;AAAEC,cAAAA,OAAO,EAAPA,OAAF;AAAWE,cAAAA,MAAM,EAANA,MAAX;AAAmBD,cAAAA,QAAQ,EAARA;AAAnB,aAAZ,CAJF;AAAA;AAAA;AAAA,mBAOSyC,aAAa,CAACV,IAAd,EAPT;;AAAA;AAOZW,YAAAA,YAPY;AAQlB7B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB+B,YAArB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,YAA9B;AATkB;AAAA;;AAAA;AAAA;AAAA;AAWlB;AACA7B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEZ,cAAAA,OAAO,EAAE,wCAAX;AAAqDmB,cAAAA,KAAK,EAAE,aAAIM;AAAhE,aAArB;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA,K,CAgBA;;AACAjD,GAAG,UAAH,CAAW,eAAX,EAA4B4C,gBAA5B;AACA5C,GAAG,UAAH,CAAW,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4B,kBAAOqC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBgC,YAAAA,SADoB,GACRjC,GAAG,CAACkC,MAAJ,CAAWC,EADH;AAEpB9C,YAAAA,MAFoB,GAEXW,GAAG,CAACgB,IAAJ,CAAS3B,MAFE;AAGpBiC,YAAAA,MAHoB,GAGXtB,GAAG,CAACgB,IAAJ,CAASM,MAHE;;AAAA,kBAKtBjC,MAAM,KAAKiC,MALW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAOOpC,OAAO,CAACkD,gBAAR,CAAyB;AAAEb,cAAAA,GAAG,EAAEU,SAAP;AAAkB5C,cAAAA,MAAM,EAANA;AAAlB,aAAzB,CAPP;;AAAA;AAOhBgD,YAAAA,cAPgB;;AAQtB,gBAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3BpC,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEZ,gBAAAA,OAAO,kDAA2CkD,cAAc,CAACd,GAA1D;AAAT,eAArB;AACD,aAFD,MAEO;AACLtB,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,gBAAAA,YAAY,EAAE;AAAhB,eAArB;AACD;;AAZqB;AAAA;;AAAA;AAAA;AAAA;AActBrC,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,cAAAA,YAAY,EAAE,yBAAhB;AAA2ChC,cAAAA,KAAK,EAAE,aAAIM;AAAtD,aAArB;AACAmB,YAAAA,OAAO,CAACC,GAAR;;AAfsB;AAAA;AAAA;;AAAA;AAmBxB/B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,cAAAA,YAAY,EAAE;AAAhB,aAArB;;AAnBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA,K,CAwBA;;AACA3E,GAAG,CAAC4E,GAAJ,CAAQ,eAAR,EAAyBhC,gBAAzB;AACA5C,GAAG,CAAC4E,GAAJ,CAAQ,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,kBAAOvC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBgC,YAAAA,SADiB,GACLjC,GAAG,CAACkC,MAAJ,CAAWC,EADN;AAEjB9C,YAAAA,MAFiB,GAERW,GAAG,CAACgB,IAAJ,CAAS3B,MAFD;AAGjBiC,YAAAA,MAHiB,GAGRtB,GAAG,CAACgB,IAAJ,CAASM,MAHD;;AAAA,kBAKnBjC,MAAM,KAAKiC,MALQ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAOSpC,OAAO,CAACsD,gBAAR,CAAyB;AAAEjB,cAAAA,GAAG,EAAEU;AAAP,aAAzB,EAA6CjC,GAAG,CAACgB,IAAjD,EAAuD;AAAE,qBAAK;AAAP,aAAvD,CAPT;;AAAA;AAObyB,YAAAA,aAPa;;AAQnB,gBAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1BxC,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB0C,aAArB,EAD0B,CAE1B;;AACAV,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,aAA3B;AACD,aAJD,MAIO;AACLxC,cAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,gBAAAA,YAAY,EAAE;AAAhB,eAArB;AACAP,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BS,aAA5B;AACD;;AAfkB;AAAA;;AAAA;AAAA;AAAA;AAiBnBxC,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,cAAAA,YAAY,EAAE,uBAAhB;AAAyChC,cAAAA,KAAK,EAAE,aAAIM;AAApD,aAArB;AACAmB,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAlBmB;AAAA;AAAA;;AAAA;AAqBrB/B,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEuC,cAAAA,YAAY,EAAE;AAAhB,aAArB;;AArBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA,K,CAyBA;;AACA3E,GAAG,CAAC+E,MAAJ,CAAWnF,IAAX,EAAiB,YAAM;AACrBwE,EAAAA,OAAO,CAACC,GAAR,8CAAkDzE,IAAlD;AACD,CAFD",
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\nimport crypto from \"crypto\"\nimport bcrypt from 'bcrypt-nodejs'\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Setting up MongoDB database\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/messageBoard\"\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\n\n\nconst User = mongoose.model('User', {\n  userName: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    unique: true,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 5\n  },\n  accessToken: {\n    type: String,\n    default: () => crypto.randomBytes(128).toString('hex')\n  }\n})\n\nconst Message = mongoose.model('Message', {\n  message: {\n    type: String,\n    required: true\n  },\n  parentId: {\n    type: String,\n  },\n  author: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next()\n  } else {\n    res.status(503).json({ error: 'Service unavailabale' })\n  }\n})\n\n// MIDDLEWARE TO CHECK ACCESSTOKEN FOR USERS (IF THE USER MATCH ANY ACCESSTOKEN IN DB)\nconst authenticateUser = async (req, res, next) => {\n  try {\n    const user = await User.findOne({ accessToken: req.header('Authorization') })\n    if (user) {\n      req.user = user;\n      next()\n    } else {\n      res\n        .status(401)\n        .json({ loggedOut: true, message: 'Please try to log in again' })\n    }\n  } catch (err) {\n    res\n      .status(403)\n      .json({ message: 'accesToken missing or wrong', errors: err.errors })\n  }\n}\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello message board')\n})\n\n//Create user\napp.post('/users', async (req, res) => {\n  try {\n    const { userName, email, password } = req.body\n    const user = new User({ userName, email, password: bcrypt.hashSync(password) })\n    const saved = await user.save()\n    res.status(201).json(saved)\n  } catch (err) {\n    res.status(400).json({ message: 'Could not create user', errors: err.errors })\n  }\n})\n\n// Login session\napp.post('/sessions', async (req, res) => {\n  const user = await User.findOne({ userName: req.body.userName })\n  if (user && bcrypt.compareSync(req.body.password, user.password)) {\n    res.json({ userId: user._id, accessToken: user.accessToken, userName: user.userName })\n  } else {\n    //Failure because user doesn't exist or encrypted password doesn't match\n    res.status(400).json({ notFound: true })\n  }\n})\n\n\napp.get('/messages', async (req, res) => {\n  let messages = await Message.find()\n    .sort({ createdAt: 'desc' })\n    .limit(100)\n  res.status(200).json(messages)\n})\n\n//POST/SEND INFORMATION IN A REQUEST\napp.post(\"/messages/:id\", authenticateUser)\napp.post('/messages', async (req, res) => {\n  //Retrieve the information sent by the client to our API endpoint\n  const { message, author, parentId } = req.body\n  //use our mongoose model to create the database entry\n  const postedMessage = new Message({ message, author, parentId })\n  try {\n    //Success\n    const savedMessage = await postedMessage.save()\n    res.status(204).json(savedMessage)\n    console.log(\"saved message:\", savedMessage)\n  } catch (err) {\n    //Bad request\n    res.status(400).json({ message: 'Could not save message to the database', error: err.errors })\n  }\n})\n\n// Delete message\napp.delete(\"/messages/:id\", authenticateUser)\napp.delete(\"/messages/:id\", async (req, res) => {\n  const messageId = req.params.id\n  const author = req.body.author\n  const userId = req.body.userId\n\n  if (author === userId) {\n    try {\n      const deletedMessage = await Message.findOneAndDelete({ _id: messageId, author })\n      if (deletedMessage !== null) {\n        res.status(200).json({ message: `Successfully deleted message with id: ${deletedMessage._id}` })\n      } else {\n        res.status(400).json({ errorMessage: \"Couldn't delete message\" })\n      }\n    } catch (err) {\n      res.status(400).json({ errorMessage: \"Couldn't delete message\", error: err.errors })\n      console.log(err)\n    }\n  }\n  else {\n    res.status(400).json({ errorMessage: \"Couldn't delete someone else's message\" })\n  }\n})\n\n\n// PUT ROUTE FOR SPECIFIC message ID\napp.put(\"/messages/:id\", authenticateUser)\napp.put('/messages/:id', async (req, res) => {\n  const messageId = req.params.id\n  const author = req.body.author\n  const userId = req.body.userId\n\n  if (author === userId) {\n    try {\n      const editedMessage = await Message.findOneAndUpdate({ _id: messageId }, req.body, { new: true })\n      if (editedMessage !== null) {\n        res.status(201).json(editedMessage)\n        // res.status(201).json({ message: `Successfully edited message with id: ${editedMessage._id}` })\n        console.log(\"Editmessage\", editedMessage)\n      } else {\n        res.status(400).json({ errorMessage: \"Couldn't edit message\" })\n        console.log(\"Editmessage2\", editedMessage)\n      }\n    } catch (err) {\n      res.status(400).json({ errorMessage: \"Couldn't edit message\", error: err.errors })\n      console.log(\"3\", err)\n    }\n  } else {\n    res.status(400).json({ errorMessage: \"Couldn't edit someone else's message\" })\n  }\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590344224916
  }
}