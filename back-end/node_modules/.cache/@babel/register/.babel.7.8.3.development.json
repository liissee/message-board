{
  "{\"sourceRoot\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"filename\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"plugins\":[],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors'; // Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\n\nconst port = process.env.PORT || 8080;\nconst app = express(); // Add middlewares to enable cors and json body parsing\n\napp.use(cors());\napp.use(bodyParser.json()); // Start defining your routes here\n\napp.get('/', (req, res) => {\n  res.send('Hello world');\n}); // Start the server\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImNvcnMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJhcHAiLCJ1c2UiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLGFBQXZCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLE1BQU1DLEdBQUcsR0FBR1AsT0FBTyxFQUFuQixDLENBRUE7O0FBQ0FPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTixJQUFJLEVBQVo7QUFDQUssR0FBRyxDQUFDQyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1EsSUFBWCxFQUFSLEUsQ0FFQTs7QUFDQUYsR0FBRyxDQUFDRyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxhQUFUO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FOLEdBQUcsQ0FBQ08sTUFBSixDQUFXWCxJQUFYLEVBQWlCLE1BQU07QUFDckJZLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHNDQUFxQ2IsSUFBSyxFQUF2RDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xpbmRhaXNlbGwvRGVza3RvcC90ZWNobmlnby1ib290Y2FtcC9tZXNzYWdlLWJvYXJkL2JhY2stZW5kIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcblxuLy8gRGVmaW5lcyB0aGUgcG9ydCB0aGUgYXBwIHdpbGwgcnVuIG9uLiBEZWZhdWx0cyB0byA4MDgwLCBidXQgY2FuIGJlIFxuLy8gb3ZlcnJpZGRlbiB3aGVuIHN0YXJ0aW5nIHRoZSBzZXJ2ZXIuIEZvciBleGFtcGxlOlxuLy9cbi8vICAgUE9SVD05MDAwIG5wbSBzdGFydFxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MFxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbi8vIEFkZCBtaWRkbGV3YXJlcyB0byBlbmFibGUgY29ycyBhbmQganNvbiBib2R5IHBhcnNpbmdcbmFwcC51c2UoY29ycygpKVxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcblxuLy8gU3RhcnQgZGVmaW5pbmcgeW91ciByb3V0ZXMgaGVyZVxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZCgnSGVsbG8gd29ybGQnKVxufSlcblxuLy8gU3RhcnQgdGhlIHNlcnZlclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,GAAG,GAAGP,OAAO,EAAnB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;AACAK,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACQ,IAAX,EAAR,E,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,CAFD,E,CAIA;;AACAN,GAAG,CAACO,MAAJ,CAAWX,IAAX,EAAiB,MAAM;AACrBY,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCb,IAAK,EAAvD;AACD,CAFD",
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1589787484777
  },
  "{\"sourceRoot\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"filename\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Setting up MongoDB database\n\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/messageBoard\";\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise;\n\nvar Message = _mongoose[\"default\"].model('Message', {\n  id: {\n    type: Number\n  },\n  message: {\n    type: String,\n    required: true\n  },\n  parentId: {\n    type: Number\n  },\n  author: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n}); // Add middlewares to enable cors and json body parsing\n\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.use(function (req, res, next) {\n  if (_mongoose[\"default\"].connection.readyState === 1) {\n    next();\n  } else {\n    res.status(503).json({\n      error: 'Service unavailabale'\n    });\n  }\n}); // Start defining your routes here\n// app.get('/', (req, res) => {\n//   res.send('Hello back end')\n// })\n\napp.get('/messages',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var messages;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Message.find().sort({\n              createdAt: 'desc'\n            });\n\n          case 2:\n            messages = _context.sent;\n            res.status(200).json(messages);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //POST/SEND INFORMATION IN A REQUEST\n\napp.post('/messages',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, id, message, author, postedMessage, savedMessage;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //Retrieve the information sent by the client to our API endpoint\n            _req$body = req.body, id = _req$body.id, message = _req$body.message, author = _req$body.author; //use our mongoose model to create the database entry\n\n            postedMessage = new Message({\n              id: id,\n              message: message,\n              author: author\n            });\n            _context2.prev = 2;\n            _context2.next = 5;\n            return postedMessage.save();\n\n          case 5:\n            savedMessage = _context2.sent;\n            res.status(204).json(savedMessage);\n            console.log(savedMessage);\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            //Bad request\n            res.status(400).json({\n              message: 'Could not save message to the database',\n              error: _context2.t0.errors\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 10]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Finding single message and comment\n\napp.post(\"/messages/:id/reply\",\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var parentId, _req$body2, message, author, replyMessage, savedMessage;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            //Retrieve the information sent by the client to our API endpoint\n            parentId = req.params.id;\n            _req$body2 = req.body, message = _req$body2.message, author = _req$body2.author; //use our mongoose model to create the database entry\n\n            replyMessage = new Message({\n              message: message,\n              author: author,\n              parentId: parentId\n            });\n            _context3.prev = 3;\n            _context3.next = 6;\n            return replyMessage.save();\n\n          case 6:\n            savedMessage = _context3.sent;\n            res.status(204).json(savedMessage);\n            console.log(savedMessage);\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            //Bad request\n            res.status(400).json({\n              message: 'Could not save reply to the database',\n              error: _context3.t0.errors\n            });\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 11]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //   try {\n//     const reply = await Message.save(\n//       { _id: req.params.id },\n//       { new: true }\n//     )\n//     res.json(reply)\n//   } catch (err) {\n//     res\n//       .status(400)\n//       .json({ message: \"could not post your reply\", errors: err.errors })\n//   }\n// })\n// app.post('/:id/reply', async (req, res) => {\n//   try {\n//     const { userId, comment, userName, movieId } = req.body\n//     const savedMovie = await RatedMovie.findOne({ userId: req.body.userId, movieId: req.body.movieId })\n//     if (savedMovie === null) {\n//       const savedMovie = new RatedMovie({ userId, movieId, comment, userName })\n//       const saved = await savedMovie.save()\n//       await User.findOneAndUpdate(\n//         { _id: userId },\n//         { $push: { movies: saved } }\n//       )\n//     }\n//     const updated = await RatedMovie.findOneAndUpdate({ userId: req.body.userId, movieId: req.body.movieId },\n//       { $push: { comments: { comment, userName } } },\n//       { new: true }\n//     )\n//     res.status(201).json(updated)\n//   } catch (err) {\n//     res.status(400).json({ message: 'Could not comment movie', errors: err.errors })\n//   }\n// })\n// Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "mongoUrl",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Message",
        "model",
        "id",
        "type",
        "Number",
        "message",
        "String",
        "required",
        "parentId",
        "author",
        "createdAt",
        "Date",
        "now",
        "use",
        "bodyParser",
        "json",
        "req",
        "res",
        "next",
        "connection",
        "readyState",
        "status",
        "error",
        "get",
        "find",
        "sort",
        "messages",
        "post",
        "body",
        "postedMessage",
        "save",
        "savedMessage",
        "console",
        "log",
        "errors",
        "params",
        "replyMessage",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lindaisell/Desktop/technigo-bootcamp/message-board/back-end",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport mongoose from 'mongoose'\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Setting up MongoDB database\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/messageBoard\"\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\nmongoose.Promise = Promise\n\n\nconst Message = mongoose.model('Message', {\n  id: {\n    type: Number\n  },\n  message: {\n    type: String,\n    required: true\n  },\n  parentId: {\n    type: Number,\n  },\n  author: {\n    type: String,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\napp.use((req, res, next) => {\n  if (mongoose.connection.readyState === 1) {\n    next()\n  } else {\n    res.status(503).json({ error: 'Service unavailabale' })\n  }\n})\n// Start defining your routes here\n// app.get('/', (req, res) => {\n//   res.send('Hello back end')\n// })\n\napp.get('/messages', async (req, res) => {\n  let messages = await Message.find()\n    .sort({ createdAt: 'desc' })\n  res.status(200).json(messages)\n})\n\n//POST/SEND INFORMATION IN A REQUEST\napp.post('/messages', async (req, res) => {\n  //Retrieve the information sent by the client to our API endpoint\n  const { id, message, author } = req.body\n  //use our mongoose model to create the database entry\n  const postedMessage = new Message({ id, message, author })\n  try {\n    //Success\n    const savedMessage = await postedMessage.save()\n    res.status(204).json(savedMessage)\n    console.log(savedMessage)\n  } catch (err) {\n    //Bad request\n    res.status(400).json({ message: 'Could not save message to the database', error: err.errors })\n  }\n})\n\n// Finding single message and comment\napp.post(\"/messages/:id/reply\", async (req, res) => {\n  //Retrieve the information sent by the client to our API endpoint\n  const parentId = req.params.id\n  const { message, author } = req.body\n  //use our mongoose model to create the database entry\n  const replyMessage = new Message({ message, author, parentId })\n  try {\n    //Success\n    const savedMessage = await replyMessage.save()\n    res.status(204).json(savedMessage)\n    console.log(savedMessage)\n  } catch (err) {\n    //Bad request\n    res.status(400).json({ message: 'Could not save reply to the database', error: err.errors })\n  }\n})\n//   try {\n//     const reply = await Message.save(\n//       { _id: req.params.id },\n\n//       { new: true }\n//     )\n//     res.json(reply)\n//   } catch (err) {\n//     res\n//       .status(400)\n//       .json({ message: \"could not post your reply\", errors: err.errors })\n//   }\n// })\n\n// app.post('/:id/reply', async (req, res) => {\n//   try {\n//     const { userId, comment, userName, movieId } = req.body\n//     const savedMovie = await RatedMovie.findOne({ userId: req.body.userId, movieId: req.body.movieId })\n\n//     if (savedMovie === null) {\n//       const savedMovie = new RatedMovie({ userId, movieId, comment, userName })\n//       const saved = await savedMovie.save()\n//       await User.findOneAndUpdate(\n//         { _id: userId },\n//         { $push: { movies: saved } }\n//       )\n//     }\n//     const updated = await RatedMovie.findOneAndUpdate({ userId: req.body.userId, movieId: req.body.movieId },\n//       { $push: { comments: { comment, userName } } },\n//       { new: true }\n//     )\n//     res.status(201).json(updated)\n//   } catch (err) {\n//     res.status(400).json({ message: 'Could not comment movie', errors: err.errors })\n//   }\n// })\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1589918063439
  }
}