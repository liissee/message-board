{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PostMessage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, Button, TextField } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from 'styled-components';\nconst Main = styled.div`\n& {\n.postMessage {\n  background: #f1f1f1;\n  margin: 10px;\n  width: 400px;\n}\n.avatar {\n  background: black;\n}\n.input-field{\n  width: 100%;\n  margin: 5px;\n}\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const PostMessage = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1]; // save the logged in userId to author in User mongoose model.\n\n\n  const author = useSelector(state => state.users.userId);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postMessages({\n      message,\n      author,\n      parentId: null\n    }));\n    dispatch(fetchMessages());\n    setMessage(\"\");\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"postMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      className: \"avatar\",\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Y\"),\n    title: \"Start a new discussion\",\n    subheader: \"remember be kind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"input-field\",\n    label: \"New message\",\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    type: \"message\",\n    required: true,\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Post\"))));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PostMessage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","postMessages","fetchMessages","Card","Button","TextField","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","styled","Main","div","Rotate","PostMessage","message","setMessage","author","state","users","userId","dispatch","handleSubmit","event","preventDefault","parentId","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;;;;;;;CAAxB;AAiBA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAI;;;;;;;;;;CAA1B;AAWA,OAAO,MAAME,WAAW,GAAG,MAAM;AAAA,oBACDpB,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACxBqB,OADwB;AAAA,QACfC,UADe,kBAG/B;;;AACA,QAAMC,MAAM,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAxB,CAA1B;AAEA,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;;AAEA,QAAM0B,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,QAAQ,CAACvB,YAAY,CAAC;AAAEiB,MAAAA,OAAF;AAAWE,MAAAA,MAAX;AAAmBQ,MAAAA,QAAQ,EAAE;AAA7B,KAAD,CAAb,CAAR;AACAJ,IAAAA,QAAQ,CAACtB,aAAa,EAAd,CAAR;AACAiB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,MAAM,EACJ,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,oBAAW,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAME,IAAA,KAAK,EAAC,wBANR;AAOE,IAAA,SAAS,EAAC,kBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,EAAE,EAAC,2BAHL;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,IAAI,EAAC,SAPP;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,KAAK,EAAED,OATT;AAUE,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACG,MAAN,CAAaC,KAAd,CAV/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,OAAO,EAAEL,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CAXF,CADF,CADF;AAiCD,CAhDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, Button, TextField } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from 'styled-components'\n\nconst Main = styled.div`\n& {\n.postMessage {\n  background: #f1f1f1;\n  margin: 10px;\n  width: 400px;\n}\n.avatar {\n  background: black;\n}\n.input-field{\n  width: 100%;\n  margin: 5px;\n}\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\nexport const PostMessage = () => {\n  const [message, setMessage] = useState(\"\")\n\n  // save the logged in userId to author in User mongoose model.\n  const author = useSelector((state) => state.users.userId)\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(postMessages({ message, author, parentId: null }))\n    dispatch(fetchMessages());\n    setMessage(\"\")\n  }\n\n  return (\n    <Main>\n      <Card className=\"postMessage\">\n        <CardHeader\n          avatar={\n            <Avatar className=\"avatar\" aria-label=\"author\">\n              Y\n          </Avatar>\n          }\n          title=\"Start a new discussion\"\n          subheader=\"remember be kind\"\n        />\n\n        <CardContent>\n          <TextField\n            className=\"input-field\"\n            label=\"New message\"\n            id=\"outlined-multiline-static\"\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            type=\"message\"\n            required\n            value={message}\n            onChange={event => setMessage(event.target.value)}\n          />\n          <Button variant=\"contained\" type=\"submit\" onClick={handleSubmit}>\n            Post\n        </Button>\n        </CardContent>\n      </Card>\n    </Main>\n  )\n}"]},"metadata":{},"sourceType":"module"}