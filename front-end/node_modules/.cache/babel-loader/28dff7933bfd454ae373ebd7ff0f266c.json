{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages, messages, setIndex } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostMessage } from './PostMessage';\nimport { ReplyMessage } from './ReplyMessage';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`; // const Card = styled.div`\n// width: 400px;\n// /* border: 1px solid lightgrey; */\n// `\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n    background: red;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n    background: green;\n  }\n}\n`;\nexport const ShowMessages = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n  const messages = useSelector(state => state.messages.messages);\n  console.log(expanded); // const indexFalse = () => {\n  //   setExpanded(messages.map((message, index) => { index: false }));\n  //   messages.forEach(message => expanded.push({ messageId: message._id, index: false }))\n  // }\n  // indexFalse()\n  // messages.forEach(message => expanded.push({ index: false })) //I suppose you can get an id or similar identifers\n  // console.log(index)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded); // setExpanded({ expanded: index })\n  }; // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(PostMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), messages.map((message, index) => React.createElement(Card, {\n    className: \"messageCard\",\n    key: message._id,\n    id: message._id,\n    selected: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"R\"),\n    title: message.author,\n    subheader: React.createElement(Timestamp, {\n      createdAt: message.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(ReplyMessage, {\n    parentId: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Rotate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch(messages.actions.setIndex({\n      id,\n      index\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Do it again!\"), React.createElement(IconButton, {\n    className: expanded ? \"expandOpen\" : \"expand\",\n    onClick: handleExpandClick // onClick={() => setExpanded({ expanded: index })}\n    // selected={this.determineItemStyle(i)}\n    ,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Replies:\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\")))))) // <MessageBox>\n  //   <PostMessage />\n  //   {messages.map((message) => (\n  //     <Card className=\"messageCard\" key={message._id}>\n  //       <div>Message: {message.message}</div>\n  //       <div>Author: {message.author}</div>\n  //       <div>Time: {message.createdAt}</div>\n  //       <ReplyMessage id={message._id} />\n  //     </Card>\n  //   ))}\n  // </MessageBox>\n  ;\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","messages","setIndex","Card","styled","PostMessage","ReplyMessage","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","Main","div","Rotate","ShowMessages","props","expanded","setExpanded","dispatch","state","console","log","handleExpandClick","map","message","index","_id","author","createdAt","actions","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages, messages, setIndex } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostMessage } from './PostMessage';\nimport { ReplyMessage } from './ReplyMessage';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\n\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`\n// const Card = styled.div`\n// width: 400px;\n// /* border: 1px solid lightgrey; */\n// `\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n    background: red;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n    background: green;\n  }\n}\n`\n\nexport const ShowMessages = (props) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n\n  const messages = useSelector((state) => state.messages.messages)\n  console.log(expanded)\n\n  // const indexFalse = () => {\n  //   setExpanded(messages.map((message, index) => { index: false }));\n  //   messages.forEach(message => expanded.push({ messageId: message._id, index: false }))\n  // }\n  // indexFalse()\n\n  // messages.forEach(message => expanded.push({ index: false })) //I suppose you can get an id or similar identifers\n  // console.log(index)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n    // setExpanded({ expanded: index })\n  };\n\n\n  // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n  return (\n    <Main>\n      <PostMessage />\n      {messages.map((message, index) => (\n        <Card className=\"messageCard\" key={message._id} id={message._id} selected={index}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"author\">\n                R\n          </Avatar>\n            }\n            title={message.author}\n            subheader={<Timestamp createdAt={message.createdAt} />}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n              Message: {message.message}\n            </Typography>\n            <ReplyMessage parentId={message._id} />\n          </CardContent>\n          <Rotate>\n            <button type=\"button\" onClick={() => dispatch(messages.actions.setIndex({ id, index }))}>\n              Do it again!\n          </button>\n            <IconButton\n              className={expanded ? \"expandOpen\" : \"expand\"}\n              onClick={handleExpandClick}\n              // onClick={() => setExpanded({ expanded: index })}\n              // selected={this.determineItemStyle(i)}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Rotate>\n\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography>Replies:</Typography>\n              <Typography>\n                Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n                set aside for 10 minutes.\n          </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))\n      }\n    </Main >\n\n\n    // <MessageBox>\n    //   <PostMessage />\n\n    //   {messages.map((message) => (\n    //     <Card className=\"messageCard\" key={message._id}>\n    //       <div>Message: {message.message}</div>\n    //       <div>Author: {message.author}</div>\n    //       <div>Time: {message.createdAt}</div>\n    //       <ReplyMessage id={message._id} />\n\n    //     </Card>\n    //   ))}\n    // </MessageBox>\n  )\n}"]},"metadata":{},"sourceType":"module"}