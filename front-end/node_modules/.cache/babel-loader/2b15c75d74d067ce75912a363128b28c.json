{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages, fetchReplies } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostMessage } from './PostMessage';\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nimport { ToggleComments } from './ToggleComments';\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n    background: red;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n    background: green;\n  }\n}\n`;\nexport const ShowMessages = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMessages());\n    dispatch(fetchReplies());\n  }, [dispatch]);\n  const messages = useSelector(state => state.messages.messages);\n  console.log(expanded); // const childMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  }; // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, messages.map((message, index) => React.createElement(Card, {\n    className: \"messageCard\",\n    key: message._id,\n    id: message._id,\n    selected: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"R\"),\n    title: message.author,\n    subheader: React.createElement(Timestamp, {\n      createdAt: message.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(PostReply, {\n    parentId: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(ToggleComments, {\n    parentId: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Rotate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: expanded ? \"expandOpen\" : \"expand\",\n    onClick: handleExpandClick // onClick={() => setExpanded({ expanded: index })}\n    // selected={this.determineItemStyle(i)}\n    ,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Replies:\"), message[0] && message.children.map(reply => React.createElement(\"div\", {\n    key: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \" \", reply.message)), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))))) // <MessageBox>\n  //   <PostMessage />\n  //   {messages.map((message) => (\n  //     <Card className=\"messageCard\" key={message._id}>\n  //       <div>Message: {message.message}</div>\n  //       <div>Author: {message.author}</div>\n  //       <div>Time: {message.createdAt}</div>\n  //       <ReplyMessage id={message._id} />\n  //     </Card>\n  //   ))}\n  // </MessageBox>\n  ;\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","fetchReplies","Card","Button","styled","PostMessage","PostReply","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","ToggleComments","Main","div","Rotate","ShowMessages","props","expanded","setExpanded","dispatch","messages","state","console","log","handleExpandClick","map","message","index","_id","author","createdAt","children","reply"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,mBAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,GAAI;;;;;;;;;;;CAAxB;AAaA,MAAMC,MAAM,GAAGd,MAAM,CAACa,GAAI;;;;;;;;;;;;CAA1B;AAcA,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AAAA,oBACLxB,QAAQ,CAAC,KAAD,CADH;AAAA;AAAA,QAC9ByB,QAD8B;AAAA,QACpBC,WADoB;;AAGrC,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,QAAQ,CAACvB,aAAa,EAAd,CAAR;AACAuB,IAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR;AACD,GAHQ,EAGN,CAACsB,QAAD,CAHM,CAAT;AAOA,QAAMC,QAAQ,GAAG1B,WAAW,CAAE2B,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAdqC,CAgBrC;AACA;AACA;;AAIA,QAAMO,iBAAiB,GAAG,MAAM;AAC9BN,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD,CAtBqC,CA2BrC;AACA;AACA;AACA;;;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KACZ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,GAAG,EAAED,OAAO,CAACE,GAA3C;AAAgD,IAAA,EAAE,EAAEF,OAAO,CAACE,GAA5D;AAAiE,IAAA,QAAQ,EAAED,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,MAAM,EACJ,oBAAC,MAAD;AAAQ,oBAAW,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAME,IAAA,KAAK,EAAED,OAAO,CAACG,MANjB;AAOE,IAAA,SAAS,EAAE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEH,OAAO,CAACI,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYJ,OAAO,CAACA,OADpB,CADF,EAIE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEA,OAAO,CAACE,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEF,OAAO,CAACE,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAVF,EAkBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEX,QAAQ,GAAG,YAAH,GAAkB,QADvC;AAEE,IAAA,OAAO,EAAEO,iBAFX,CAGE;AACA;AAJF;AAKE,qBAAeP,QALjB;AAME,kBAAW,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAlBF,EA8BE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,QAAd;AAAwB,IAAA,OAAO,EAAC,MAAhC;AAAuC,IAAA,aAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGS,OAAO,CAAC,CAAD,CAAP,IAAcA,OAAO,CAACK,QAAR,CAAiBN,GAAjB,CAAsBO,KAAD,IAClC;AAAK,IAAA,GAAG,EAAEN,OAAO,CAACE,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBI,KAAK,CAACN,OAA/B,CADa,CAFjB,EAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CA9BF,CADD,CADH,CADF,CAiDE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA7DF;AA+DD,CA/FM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages, fetchReplies } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostMessage } from './PostMessage';\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\nimport { ToggleComments } from './ToggleComments';\n\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n    background: red;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n    background: green;\n  }\n}\n`\n\nexport const ShowMessages = (props) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n    dispatch(fetchReplies());\n  }, [dispatch]);\n\n\n\n  const messages = useSelector((state) => state.messages.messages)\n  console.log(expanded)\n\n  // const childMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n  return (\n    <Main>\n      {messages.map((message, index) => (\n        <Card className=\"messageCard\" key={message._id} id={message._id} selected={index}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"author\">\n                R\n          </Avatar>\n            }\n            title={message.author}\n            subheader={<Timestamp createdAt={message.createdAt} />}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n              Message: {message.message}\n            </Typography>\n            <PostReply parentId={message._id} />\n            <ToggleComments parentId={message._id} />\n\n          </CardContent>\n          <Rotate>\n            <IconButton\n              className={expanded ? \"expandOpen\" : \"expand\"}\n              onClick={handleExpandClick}\n              // onClick={() => setExpanded({ expanded: index })}\n              // selected={this.determineItemStyle(i)}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Rotate>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography>Replies:</Typography>\n              {message[0] && message.children.map((reply) => (\n                <div key={message._id}> {reply.message}</div>\n              ))}\n              <Typography>\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))\n      }\n    </Main>\n\n\n    // <MessageBox>\n    //   <PostMessage />\n\n    //   {messages.map((message) => (\n    //     <Card className=\"messageCard\" key={message._id}>\n    //       <div>Message: {message.message}</div>\n    //       <div>Author: {message.author}</div>\n    //       <div>Time: {message.createdAt}</div>\n    //       <ReplyMessage id={message._id} />\n\n    //     </Card>\n    //   ))}\n    // </MessageBox>\n  )\n}"]},"metadata":{},"sourceType":"module"}