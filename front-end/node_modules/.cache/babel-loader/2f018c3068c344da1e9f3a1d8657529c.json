{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ReplyMessage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nconst Form = styled.div`\n  padding: 10px;\n  margin-top: 10px;\n  display: flex;\n  flex-direction:column;\n`;\nconst RepliesWrapper = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  font-size: 10px;\n`;\nexport const ReplyMessage = ({\n  parentId\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const dispatch = useDispatch();\n  const messages = useSelector(state => state.messages.messages); // console.log(parentId)\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postMessages({\n      message,\n      author,\n      parentId\n    }));\n    dispatch(fetchMessages()); //Clear inputfield\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Comment\", React.createElement(TextField, {\n    className: \"input-field\",\n    label: \"New message\",\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    type: \"message\",\n    required: true,\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"Author\", React.createElement(TextField, {\n    type: \"author\",\n    required: true,\n    value: author,\n    onChange: event => setAuthor(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Post comment\"), React.createElement(RepliesWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Author: \", message.author), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Time: \", message.createdAt)));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ReplyMessage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","postMessages","fetchMessages","Card","TextField","Button","styled","Form","div","RepliesWrapper","ReplyMessage","parentId","message","setMessage","author","setAuthor","dispatch","messages","state","handleSubmit","event","preventDefault","target","value","createdAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;CAAxB;AAMA,MAAMC,cAAc,GAAGH,MAAM,CAACE,GAAI;;;;;CAAlC;AAOA,OAAO,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACdd,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACrCe,OADqC;AAAA,QAC5BC,UAD4B;;AAAA,qBAEhBhB,QAAQ,CAAC,EAAD,CAFQ;AAAA;AAAA,QAErCiB,MAFqC;AAAA,QAE7BC,SAF6B;;AAG5C,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAMiB,QAAQ,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B,CAL4C,CAM5C;;AAEA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,QAAQ,CAACf,YAAY,CAAC;AAAEW,MAAAA,OAAF;AAAWE,MAAAA,MAAX;AAAmBH,MAAAA;AAAnB,KAAD,CAAb,CAAR;AACAK,IAAAA,QAAQ,CAACd,aAAa,EAAd,CAAR,CAH8B,CAI9B;AACD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,EAAE,EAAC,2BAHP;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,IAAI,EAAE,CALV;AAMI,IAAA,OAAO,EAAC,UANZ;AAOI,IAAA,IAAI,EAAC,SAPT;AAQI,IAAA,QAAQ,MARZ;AASI,IAAA,KAAK,EAAEU,OATX;AAUI,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd,CAVjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,YAeA,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,KAAK,EAAET,MAHX;AAII,IAAA,QAAQ,EAAEM,KAAK,IAAIL,SAAS,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfA,CADF,EAwBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,OAAO,EAAEJ,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF,EA2BE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeP,OAAO,CAACA,OAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcA,OAAO,CAACE,MAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYF,OAAO,CAACY,SAApB,CAHF,CA3BF,CADF;AAmCD,CAlDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components'\n\nconst Form = styled.div`\n  padding: 10px;\n  margin-top: 10px;\n  display: flex;\n  flex-direction:column;\n`\nconst RepliesWrapper = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  font-size: 10px;\n`\n\nexport const ReplyMessage = ({ parentId }) => {\n  const [message, setMessage] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const dispatch = useDispatch();\n\n  const messages = useSelector((state) => state.messages.messages)\n  // console.log(parentId)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(postMessages({ message, author, parentId }))\n    dispatch(fetchMessages());\n    //Clear inputfield\n  }\n\n  return (\n    <div>\n      <Form>\n        Comment\n      <TextField\n          className=\"input-field\"\n          label=\"New message\"\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          type=\"message\"\n          required\n          value={message}\n          onChange={event => setMessage(event.target.value)}\n        />\n        Author\n      <TextField\n          type=\"author\"\n          required\n          value={author}\n          onChange={event => setAuthor(event.target.value)}\n        />\n      </Form>\n\n      <Button variant=\"contained\" type=\"submit\" onClick={handleSubmit}>\n        Post comment\n        </Button>\n      <RepliesWrapper>\n        <div>Message: {message.message}</div>\n        <div>Author: {message.author}</div>\n        <div>Time: {message.createdAt}</div>\n      </RepliesWrapper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}