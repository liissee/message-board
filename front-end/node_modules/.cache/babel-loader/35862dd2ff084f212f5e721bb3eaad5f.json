{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/EditMessage.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editMessages } from 'reducers/messages';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EdiText from \"react-editext\";\n\nconst Main = _styled.div.withConfig({\n  displayName: \"EditMessage__Main\",\n  componentId: \"qmz79t-0\"\n})([\"padding:10px;display:flex;flex-direction:row;&{.message-text{font-family:source-code-pro,Monaco,Consolas,\\\"Courier New\\\",monospace;}}\"]);\n\nconst StyledEdiText = _styled(EdiText).withConfig({\n  displayName: \"EditMessage__StyledEdiText\",\n  componentId: \"qmz79t-1\"\n})([\"&{.message-text{font-family:source-code-pro,Monaco,Consolas,\\\"Courier New\\\",monospace;color:black;}button{border-radius:5px;}button[editext=\\\"save-button\\\"]{width:40px;&:hover{background:greenyellow;}}button[editext=\\\"cancel-button\\\"]{&:hover{background:tomato;color:#fff;}}input,textarea{font-family:source-code-pro,Monaco,Consolas,\\\"Courier New\\\",monospace;color:darkgoldenrod;font-weight:bold;border-radius:5px;}}\"]);\n\nexport const EditMessage = ({\n  id,\n  author,\n  message\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        newValue = _useState2[0],\n        setNewValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editing = _useState4[0],\n        setEditing = _useState4[1];\n\n  const dispatch = useDispatch();\n  const accessToken = useSelector(state => state.users.accessToken);\n  const userId = useSelector(state => state.users.userId);\n  const isAllowed = author == userId;\n  console.log(isAllowed);\n\n  const handleEdit = newValue => {\n    setNewValue(newValue);\n    dispatch(editMessages({\n      id,\n      author,\n      newValue\n    }));\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, isAllowed ? React.createElement(StyledEdiText, {\n    value: message,\n    validationMessage: \"Please type at least 1 characters.\",\n    validation: val => val.length > 0,\n    type: \"textarea\",\n    buttonsAlign: \"before\",\n    onSave: handleEdit,\n    editing: editing,\n    showButtonsOnHover: true,\n    viewProps: {\n      className: 'message-text',\n      style: {\n        borderRadius: 3\n      }\n    },\n    inputProps: {\n      className: 'textarea',\n      placeholder: 'Type your content here',\n      style: {\n        outline: 'none',\n        minWidth: 'auto'\n      },\n      rows: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"message-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, message));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/EditMessage.js"],"names":["React","useState","useDispatch","useSelector","editMessages","IconButton","EditIcon","EdiText","Main","styled","div","StyledEdiText","EditMessage","id","author","message","newValue","setNewValue","editing","setEditing","dispatch","accessToken","state","users","userId","isAllowed","console","log","handleEdit","val","length","className","style","borderRadius","placeholder","outline","minWidth","rows"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,MAAMC,IAAI,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,6IAAV;;AAUA,MAAMC,aAAa,GAAGF,OAAM,CAACF,OAAD,CAAT;AAAA;AAAA;AAAA,waAAnB;;AA8BA,OAAO,MAAMK,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA,oBACtBd,QAAQ,EADc;AAAA;AAAA,QAC/Ce,QAD+C;AAAA,QACrCC,WADqC;;AAAA,qBAExBhB,QAAQ,CAAC,KAAD,CAFgB;AAAA;AAAA,QAE/CiB,OAF+C;AAAA,QAEtCC,UAFsC;;AAItD,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,WAAW,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,WAAxB,CAA/B;AACA,QAAMG,MAAM,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAxB,CAA1B;AAGA,QAAMC,SAAS,GAAGX,MAAM,IAAIU,MAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,QAAMG,UAAU,GAAIZ,QAAD,IAAc;AAC/BC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAI,IAAAA,QAAQ,CAAChB,YAAY,CAAC;AAAES,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcE,MAAAA;AAAd,KAAD,CAAb,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,SAAS,GACN,oBAAC,aAAD;AACA,IAAA,KAAK,EAAEV,OADP;AAEA,IAAA,iBAAiB,EAAC,oCAFlB;AAGA,IAAA,UAAU,EAAEc,GAAG,IAAIA,GAAG,CAACC,MAAJ,GAAa,CAHhC;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,YAAY,EAAC,QALb;AAMA,IAAA,MAAM,EAAEF,UANR;AAOA,IAAA,OAAO,EAAEV,OAPT;AAQA,IAAA,kBAAkB,MARlB;AASA,IAAA,SAAS,EAAE;AACTa,MAAAA,SAAS,EAAE,cADF;AAETC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAFE,KATX;AAaA,IAAA,UAAU,EAAE;AACVF,MAAAA,SAAS,EAAE,UADD;AAEVG,MAAAA,WAAW,EAAE,wBAFH;AAGVF,MAAAA,KAAK,EAAE;AACLG,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAHG;AAOVC,MAAAA,IAAI,EAAE;AAPI,KAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAuBN;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BtB,OAA/B,CAxBN,CADF;AA6BD,CA9CM","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editMessages } from 'reducers/messages';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport styled from 'styled-components/macro'\nimport EdiText from \"react-editext\";\n\n\nconst Main = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n& {\n  .message-text {\n    font-family: source-code-pro, Monaco, Consolas, \"Courier New\", monospace;\n  }\n}\n`\nconst StyledEdiText = styled(EdiText)`\n&{\n.message-text {\n  font-family: source-code-pro, Monaco, Consolas, \"Courier New\", monospace;\n  color: black;\n  }\n  button {\n    border-radius: 5px;\n  }\n  button[editext=\"save-button\"] {\n    width: 40px;\n    &:hover {\n      background: greenyellow;\n    }\n  }\n  button[editext=\"cancel-button\"] {\n    &:hover {\n      background: tomato;\n      color: #fff;\n    }\n  }\n  input, textarea {\n    font-family: source-code-pro, Monaco, Consolas, \"Courier New\", monospace;\n    color: darkgoldenrod;\n    font-weight: bold;\n    border-radius: 5px;\n  }\n}\n`\n\nexport const EditMessage = ({ id, author, message }) => {\n  const [newValue, setNewValue] = useState()\n  const [editing, setEditing] = useState(false);\n\n  const dispatch = useDispatch();\n  const accessToken = useSelector((state) => state.users.accessToken)\n  const userId = useSelector((state) => state.users.userId)\n\n\n  const isAllowed = author == userId\n  console.log(isAllowed)\n\n  const handleEdit = (newValue) => {\n    setNewValue(newValue)\n    dispatch(editMessages({ id, author, newValue }))\n  }\n\n  return (\n    <Main>\n      {isAllowed\n        ? <StyledEdiText\n          value={message}\n          validationMessage=\"Please type at least 1 characters.\"\n          validation={val => val.length > 0}\n          type=\"textarea\"\n          buttonsAlign='before'\n          onSave={handleEdit}\n          editing={editing}\n          showButtonsOnHover\n          viewProps={{\n            className: 'message-text',\n            style: { borderRadius: 3 }\n          }}\n          inputProps={{\n            className: 'textarea',\n            placeholder: 'Type your content here',\n            style: {\n              outline: 'none',\n              minWidth: 'auto'\n            },\n            rows: 3\n          }} />\n        : <div className=\"message-text\">{message}</div>\n      }\n    </Main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}