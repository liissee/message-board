{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const messages = createSlice({\n  name: 'messages',\n  initialState: {\n    messages: []\n  },\n  reducers: {\n    setMessage: (state, action) => {\n      state.messages = action.payload;\n    }\n  }\n}); //GET ALL MESSAGES\n\nexport const fetchMessages = () => {\n  return dispatch => {\n    // dispatch(ui.actions.setLoading(true))\n    fetch(`http://localhost:8080/`).then(res => res.json()).then(json => {\n      console.log(json);\n      dispatch(messages.actions.setMessage(json)); // dispatch(ui.actions.setLoading(false))\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/reducers/messages.js"],"names":["createSlice","messages","name","initialState","reducers","setMessage","state","action","payload","fetchMessages","dispatch","fetch","then","res","json","console","log","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,UAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZF,IAAAA,QAAQ,EAAE;AADE,GAFoB;AAKlCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACD;AAHO;AALwB,CAAD,CAA5B,C,CAYP;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AACjB;AACAC,IAAAA,KAAK,CAAE,wBAAF,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,QAAQ,CAACT,QAAQ,CAACgB,OAAT,CAAiBZ,UAAjB,CAA4BS,IAA5B,CAAD,CAAR,CAFY,CAGZ;AACD,KANH;AAOD,GATD;AAUD,CAXM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const messages = createSlice({\n  name: 'messages',\n  initialState: {\n    messages: []\n  },\n  reducers: {\n    setMessage: (state, action) => {\n      state.messages = action.payload\n    }\n  }\n})\n\n//GET ALL MESSAGES\nexport const fetchMessages = () => {\n  return dispatch => {\n    // dispatch(ui.actions.setLoading(true))\n    fetch(`http://localhost:8080/`)\n      .then(res => res.json())\n      .then(json => {\n        console.log(json);\n        dispatch(messages.actions.setMessage(json))\n        // dispatch(ui.actions.setLoading(false))\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}