{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Registration.js\";\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\n\nconst Main = _styled.div.withConfig({\n  displayName: \"Registration__Main\",\n  componentId: \"sc-1di87ov-0\"\n})([\"width:350px;border:lightgrey solid 1px;padding:10px;&{.buttons{margin-top:5px;display:flex;justify-content:space-between;}}\"]);\n\nexport const Registration = ({\n  handleClick\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        registred = _useState8[0],\n        setRegistred = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        failure = _useState10[0],\n        setFailure = _useState10[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName,\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 201) {\n        return res.json().then(json => console.log(json.message)), setFailure(true);\n      } else {\n        setRegistred(true);\n        setTimeout(reDirect, 2000);\n      }\n    }).catch(err => console.log(\"Error:\", err));\n  };\n\n  const reDirect = () => {// history.push(`/login`)\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, registred && React.createElement(\"div\", {\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Success!\"), !registred && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !failure && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"CREATE NEW USER\"), failure && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"User not created. Try using another name or email!\"), userName.length < 2 && userName.length !== 0 && \" is too short\", userName.length > 20 && \" is too long\", React.createElement(TextField, {\n    size: \"small\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    id: \"name\",\n    label: \"User name\",\n    name: \"name\",\n    required: true,\n    fullWidth: true,\n    type: \"text\",\n    value: userName,\n    onChange: event => setUserName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    size: \"small\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoFocus: true,\n    type: \"text\",\n    value: email,\n    onChange: event => setEmail(event.target.value.toLowerCase()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, password.length < 5 && password.length !== 0 && \" is too short\", React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    size: \"small\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"submit\",\n    size: \"small\",\n    disabled: userName.length > 1 && userName.length < 21 && password.length > 4 && email ? false : true,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"SIGN UP\"), React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    type: \"button\",\n    onClick: showRegistration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Already a member?\"))));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Registration.js"],"names":["React","useState","Button","TextField","Main","styled","div","Registration","handleClick","userName","setUserName","password","setPassword","email","setEmail","registred","setRegistred","failure","setFailure","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","json","console","log","message","setTimeout","reDirect","catch","err","length","target","value","toLowerCase","showRegistration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core'\nimport styled from 'styled-components/macro'\n\nconst Main = styled.div`\nwidth: 350px;\nborder: lightgrey solid 1px;\npadding: 10px;\n& {\n  .buttons {\n    margin-top: 5px;\n    display: flex; \n    justify-content: space-between;\n  }\n}\n`\n\nexport const Registration = ({ handleClick }) => {\n  const [userName, setUserName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [registred, setRegistred] = useState(false)\n  const [failure, setFailure] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      body: JSON.stringify({ userName, email, password }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(res => {\n        if (res.status !== 201) {\n          return (\n            res.json().then(json => console.log(json.message)), setFailure(true)\n          )\n        } else {\n          setRegistred(true)\n          setTimeout(reDirect, 2000);\n        }\n      })\n      .catch(err => console.log(\"Error:\", err))\n  }\n\n  const reDirect = () => {\n    // history.push(`/login`)\n  }\n\n  return (\n    <Main>\n      {registred &&\n        <div color={\"#fff\"}>Success!</div>\n      }\n      {!registred && (\n        <div>\n          {!failure && <div>CREATE NEW USER</div>}\n          {failure && (\n            <div>\n              User not created. Try using another name or email!\n            </div>\n          )}\n          {userName.length < 2 && userName.length !== 0 && \" is too short\"}\n          {userName.length > 20 && \" is too long\"}\n          <TextField\n            size=\"small\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            id=\"name\"\n            label=\"User name\"\n            name=\"name\"\n            required\n            fullWidth\n            type=\"text\"\n            value={userName}\n            onChange={event => setUserName(event.target.value)}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            size=\"small\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoFocus\n            type=\"text\"\n            value={email}\n            onChange={event => setEmail(event.target.value.toLowerCase())}\n          ></TextField>\n          <div>\n            {password.length < 5 && password.length !== 0 && \" is too short\"}\n            <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              size=\"small\"\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n            ></TextField>\n          </div>\n          <div className=\"buttons\">\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              size=\"small\"\n              disabled={\n                userName.length > 1 &&\n                  userName.length < 21 &&\n                  password.length > 4 &&\n                  email\n                  ? false\n                  : true\n              }\n              onClick={handleSubmit}\n            >\n              SIGN UP\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              type=\"button\" onClick={showRegistration}>\n              Already a member?\n            </Button>\n          </div>\n        </div>\n      )}\n    </Main>\n  )\n}"]},"metadata":{},"sourceType":"module"}