{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PopoverLogin.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { fetchUser } from '../reducers/users.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ErrorMessage, Input, Label, SignInButton } from './Styling';\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\nexport const PopoverLogin = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const classes = useStyles();\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        anchorEl = _useState6[0],\n        setAnchorEl = _useState6[1];\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const failed = useSelector(state => state.ui.isLoginFailed);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    if (failed) {\n      setAnchorEl(null);\n    }\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  const handleSignin = event => {\n    event.preventDefault();\n    dispatch(fetchUser({\n      email,\n      password\n    }));\n    handleClose();\n    history.push(`/`);\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('the key is enter');\n      dispatch(fetchUser({\n        email,\n        password\n      }));\n      handleClose();\n      history.push(`/`);\n    }\n  };\n\n  const reDirect = () => {\n    handleClose();\n    setAnchorEl(null);\n    history.push(`/register`);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SignInButton, {\n    \"aria-describedby\": id,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Email\", React.createElement(Input, {\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: event => setEmail(event.target.value.toLowerCase()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Password\", React.createElement(Input, {\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    onKeyPress: handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), failed && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Incorrect user and/or password.\"), React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleSignin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"LOGIN\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: reDirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Not a member?\"))));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PopoverLogin.js"],"names":["React","useState","useDispatch","useSelector","useHistory","Button","Popover","Typography","fetchUser","makeStyles","ErrorMessage","Input","Label","SignInButton","useStyles","theme","typography","padding","spacing","PopoverLogin","email","setEmail","password","setPassword","classes","anchorEl","setAnchorEl","history","dispatch","failed","state","ui","isLoginFailed","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","handleSignin","preventDefault","push","handleKeyPress","e","key","console","log","reDirect","vertical","horizontal","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Popover from '@material-ui/core/Popover'\nimport Typography from '@material-ui/core/Typography'\nimport { fetchUser } from '../reducers/users.js'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ErrorMessage, Input, Label, SignInButton } from './Styling'\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport const PopoverLogin = () => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const failed = useSelector(state => state.ui.isLoginFailed)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  };\n\n  const handleClose = () => {\n    if (failed) {\n      setAnchorEl(null);\n    }\n  };\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined;\n\n  const handleSignin = (event) => {\n    event.preventDefault()\n    dispatch(fetchUser({ email, password }))\n    handleClose()\n    history.push(`/`)\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      console.log('the key is enter')\n      dispatch(fetchUser({ email, password }))\n      handleClose()\n      history.push(`/`)\n    }\n  }\n\n  const reDirect = () => {\n    handleClose()\n    setAnchorEl(null);\n    history.push(`/register`)\n  }\n\n\n  return (\n    <>\n      <SignInButton aria-describedby={id} onClick={handleClick}>\n        SIGN IN\n      </SignInButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>\n          <Label>\n            Email\n          <Input\n              type=\"email\"\n              required\n              value={email}\n              onChange={event => setEmail(event.target.value.toLowerCase())}\n            />\n          </Label>\n          <Label>\n            Password\n          <Input\n              type=\"password\"\n              required\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              onKeyPress={handleKeyPress}\n            />\n          </Label>\n          {failed && <ErrorMessage>Incorrect user and/or password.</ErrorMessage>}\n          <Button type=\"submit\"\n            onClick={handleSignin}\n          >\n            LOGIN\n        </Button>\n          <Button type=\"button\" onClick={reDirect}>\n            Not a member?\n        </Button>\n        </Typography>\n      </Popover>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}