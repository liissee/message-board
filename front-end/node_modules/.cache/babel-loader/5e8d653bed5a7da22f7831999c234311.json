{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PostMessage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Timestamp } from \"./Timestamp\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, Button, TextField, Label } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from 'styled-components';\nconst Main = styled.div`\n& {\n.postMessage {\n  background: #f1f1f1;\n  margin: 10px;\n  width: 400px;\n}\n.avatar {\n  background: black;\n}\n.input-field{\n  width: 100%;\n  margin: 5px;\n}\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const PostMessage = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        expanded = _useState6[0],\n        setExpanded = _useState6[1];\n\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(postMessages());\n  // }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postMessages({\n      message,\n      author\n    }));\n    dispatch(fetchMessages());\n    setMessage(\"\");\n    setAuthor(\"\");\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"postMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      className: \"avatar\",\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Y\"),\n    title: \"Start a new discussion\",\n    subheader: \"remember be kind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"input-field\",\n    label: \"New message\",\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    type: \"message\",\n    required: true,\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"input-field\",\n    label: \"Author\",\n    type: \"author\",\n    variant: \"outlined\",\n    required: true,\n    value: author,\n    onChange: event => setAuthor(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Post\")), React.createElement(Rotate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: expanded ? \"expandOpen\" : \"expand\",\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Replies:\"), React.createElement(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\"))))) // <CardContent>\n  //   Message\n  //   <Input\n  //     type=\"message\"\n  //     required\n  //     value={message}\n  //     onChange={event => setMessage(event.target.value)}\n  //   />\n  //       Author\n  //   <Input\n  //     type=\"author\"\n  //     required\n  //     value={author}\n  //     onChange={event => setAuthor(event.target.value)}\n  //   />\n  //   <Button type=\"submit\" onClick={handleSubmit}>\n  //     Post\n  //     </Button>\n  // </CardContent>\n  // </Card >\n  ;\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/PostMessage.js"],"names":["React","useState","useEffect","Timestamp","useSelector","useDispatch","postMessages","fetchMessages","Card","Button","TextField","Label","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","styled","Main","div","Rotate","PostMessage","message","setMessage","author","setAuthor","expanded","setExpanded","dispatch","handleSubmit","event","preventDefault","handleExpandClick","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Timestamp } from \"./Timestamp\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { postMessages, fetchMessages } from 'reducers/messages';\nimport { Card, Button, TextField, Label } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styled from 'styled-components'\n\nconst Main = styled.div`\n& {\n.postMessage {\n  background: #f1f1f1;\n  margin: 10px;\n  width: 400px;\n}\n.avatar {\n  background: black;\n}\n.input-field{\n  width: 100%;\n  margin: 5px;\n}\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\nexport const PostMessage = () => {\n  const [message, setMessage] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const [expanded, setExpanded] = useState(false)\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(postMessages());\n  // }, [dispatch]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(postMessages({ message, author }))\n    dispatch(fetchMessages());\n    setMessage(\"\")\n    setAuthor(\"\")\n  }\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  return (\n    <Main>\n      <Card className=\"postMessage\">\n        <CardHeader\n          avatar={\n            <Avatar className=\"avatar\" aria-label=\"author\">\n              Y\n          </Avatar>\n          }\n          title=\"Start a new discussion\"\n          subheader=\"remember be kind\"\n        />\n\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <TextField\n              className=\"input-field\"\n              label=\"New message\"\n              id=\"outlined-multiline-static\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              type=\"message\"\n              required\n              value={message}\n              onChange={event => setMessage(event.target.value)}\n            />\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            <TextField\n              className=\"input-field\"\n              label=\"Author\"\n              type=\"author\"\n              variant=\"outlined\"\n              required\n              value={author}\n              onChange={event => setAuthor(event.target.value)}\n            />\n          </Typography>\n          <Button variant=\"contained\" type=\"submit\" onClick={handleSubmit}>\n            Post\n        </Button>\n        </CardContent>\n        <Rotate>\n          <IconButton\n            className={expanded ? \"expandOpen\" : \"expand\"}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </Rotate>\n\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Replies:</Typography>\n            <Typography paragraph>\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n              set aside for 10 minutes.\n          </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </Main>\n\n    // <CardContent>\n    //   Message\n    //   <Input\n    //     type=\"message\"\n    //     required\n    //     value={message}\n    //     onChange={event => setMessage(event.target.value)}\n    //   />\n    //       Author\n    //   <Input\n    //     type=\"author\"\n    //     required\n    //     value={author}\n    //     onChange={event => setAuthor(event.target.value)}\n    //   />\n    //   <Button type=\"submit\" onClick={handleSubmit}>\n    //     Post\n    //     </Button>\n    // </CardContent>\n    // </Card >\n  )\n}"]},"metadata":{},"sourceType":"module"}