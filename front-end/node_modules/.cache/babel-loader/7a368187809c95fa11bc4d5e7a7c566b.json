{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser } from '../reducers/users.js';\nimport styled from 'styled-components';\nimport { Button, Input } from '@material-ui/core';\nexport const Login = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const failed = useSelector(state => state.ui.isLoginFailed);\n\n  const handleSignin = event => {\n    event.preventDefault();\n    dispatch(fetchUser({\n      email,\n      password\n    }));\n\n    if (!failed) {// history.push(`/`)\n    }\n  };\n\n  const reDirect = () => {// history.push(`/register`)\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign-in\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Email\", React.createElement(Input, {\n    type: \"email\",\n    required: true,\n    value: email,\n    onChange: event => setEmail(event.target.value.toLowerCase()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Password\", React.createElement(Input, {\n    type: \"password\",\n    required: true,\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), failed && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Incorrect user and/or password.\"), React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleSignin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"LOGIN\"), React.createElement(Button, {\n    type: \"button\",\n    onClick: reDirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Not a member?\")));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js"],"names":["React","useState","useDispatch","useSelector","fetchUser","styled","Button","Input","Login","email","setEmail","password","setPassword","history","useHistory","dispatch","failed","state","ui","isLoginFailed","handleSignin","event","preventDefault","reDirect","target","value","toLowerCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACCP,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAClBQ,KADkB;AAAA,QACXC,QADW;;AAAA,qBAEOT,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAElBU,QAFkB;AAAA,QAERC,WAFQ;;AAGzB,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,MAAM,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA1B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAACX,SAAS,CAAC;AAAEK,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAV,CAAR;;AACA,QAAI,CAACK,MAAL,EAAa,CACX;AACD;AACF,GAND;;AAQA,QAAMO,QAAQ,GAAG,MAAM,CACrB;AACD,GAFD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAEd,KAHT;AAIE,IAAA,QAAQ,EAAEY,KAAK,IAAIX,QAAQ,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAEf,QAHT;AAIE,IAAA,QAAQ,EAAEU,KAAK,IAAIT,WAAW,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAd,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAoBGT,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCApBb,EAsBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,EAyBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAzBF,CADF,CADF;AAiCD,CArDM","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchUser } from '../reducers/users.js'\nimport styled from 'styled-components'\nimport { Button, Input } from '@material-ui/core'\n\n\n\nexport const Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const failed = useSelector(state => state.ui.isLoginFailed)\n\n  const handleSignin = (event) => {\n    event.preventDefault()\n    dispatch(fetchUser({ email, password }))\n    if (!failed) {\n      // history.push(`/`)\n    }\n  }\n\n  const reDirect = () => {\n    // history.push(`/register`)\n  }\n\n\n  return (\n    <div>\n      <form>\n        <div>Sign-in</div>\n        <label>\n          Email\n          <Input\n            type=\"email\"\n            required\n            value={email}\n            onChange={event => setEmail(event.target.value.toLowerCase())}\n          />\n        </label>\n        <label>\n          Password\n          <Input\n            type=\"password\"\n            required\n            value={password}\n            onChange={event => setPassword(event.target.value)}\n          />\n        </label>\n        {failed && <p>Incorrect user and/or password.</p>}\n\n        <Button type=\"submit\" onClick={handleSignin}>\n          LOGIN\n        </Button>\n        <Button type=\"button\" onClick={reDirect}>\n          Not a member?\n        </Button>\n      </form>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}