{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser } from '../reducers/users.js';\nimport styled from 'styled-components';\nimport { Button, TextField } from '@material-ui/core';\nexport const Login = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1]; // const history = useHistory();\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loggedIn = _useState6[0],\n        setLoggedIn = _useState6[1];\n\n  const dispatch = useDispatch();\n  const failed = useSelector(state => state.ui.isLoginFailed);\n\n  const handleSignin = event => {\n    event.preventDefault();\n    dispatch(fetchUser({\n      userName,\n      password\n    }));\n\n    if (!failed) {// history.push(`/`)\n    }\n  };\n\n  const reDirect = () => {// history.push(`/register`)\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, loggedIn && React.createElement(\"div\", {\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Success! Continuing to login...\"), !loggedIn && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, !failed && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"CREATE NEW USER\"), failed && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"User not created. Try using another name or email!\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign-in\"), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"name\",\n    label: \"User name\",\n    name: \"name\",\n    required: true,\n    fullWidth: true,\n    type: \"text\",\n    value: userName,\n    onChange: event => setUserName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), failed && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Incorrect user and/or password.\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleSignin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"LOGIN\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: reDirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Not a member?\")));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js"],"names":["React","useState","useDispatch","useSelector","fetchUser","styled","Button","TextField","Login","userName","setUserName","password","setPassword","loggedIn","setLoggedIn","dispatch","failed","state","ui","isLoginFailed","handleSignin","event","preventDefault","reDirect","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACOP,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QAClBQ,QADkB;AAAA,QACRC,WADQ;;AAAA,qBAEOT,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAElBU,QAFkB;AAAA,QAERC,WAFQ,kBAGzB;;;AAHyB,qBAIOX,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,QAIlBY,QAJkB;AAAA,QAIRC,WAJQ;;AAMzB,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,MAAM,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA1B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAACX,SAAS,CAAC;AAAEK,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAD,CAAV,CAAR;;AACA,QAAI,CAACK,MAAL,EAAa,CACX;AACD;AACF,GAND;;AAQA,QAAMO,QAAQ,GAAG,MAAM,CACrB;AACD,GAFD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QAAQ,IACP;AAAK,IAAA,KAAK,EAAE,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,EAIG,CAACA,QAAD,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACG,MAAD,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADd,EAEGA,MAAM,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHJ,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,KAAK,EAAC,WAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,IAAI,EAAC,MARP;AASE,IAAA,KAAK,EAAEP,QATT;AAUE,IAAA,QAAQ,EAAEY,KAAK,IAAIX,WAAW,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAd,CAVhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAqBE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAC,UANR;AAOE,IAAA,IAAI,EAAC,UAPP;AAQE,IAAA,EAAE,EAAC,UARL;AASE,IAAA,YAAY,EAAC,kBATf;AAUE,IAAA,KAAK,EAAEd,QAVT;AAWE,IAAA,QAAQ,EAAEU,KAAK,IAAIT,WAAW,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAd,CAXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAkCGT,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAlCb,EAoCE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAEI,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApCF,EA2CE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAEG,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA3CF,CALJ,CADF;AA4DD,CAlFM","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchUser } from '../reducers/users.js'\nimport styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\n\n\n\nexport const Login = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const history = useHistory();\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  const dispatch = useDispatch()\n  const failed = useSelector(state => state.ui.isLoginFailed)\n\n  const handleSignin = (event) => {\n    event.preventDefault()\n    dispatch(fetchUser({ userName, password }))\n    if (!failed) {\n      // history.push(`/`)\n    }\n  }\n\n  const reDirect = () => {\n    // history.push(`/register`)\n  }\n\n\n  return (\n    <div>\n      {loggedIn &&\n        <div color={\"#fff\"}>Success! Continuing to login...</div>\n      }\n      {!loggedIn && (\n        <div>\n          {!failed && <div>CREATE NEW USER</div>}\n          {failed && (\n            <div>\n              User not created. Try using another name or email!\n            </div>\n          )}\n          <div>Sign-in</div>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            id=\"name\"\n            label=\"User name\"\n            name=\"name\"\n            required\n            fullWidth\n            type=\"text\"\n            value={userName}\n            onChange={event => setUserName(event.target.value)}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={event => setPassword(event.target.value)}\n          ></TextField>\n          {failed && <p>Incorrect user and/or password.</p>}\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={handleSignin}>\n            LOGIN\n        </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            onClick={reDirect}>\n            Not a member?\n        </Button>\n        </div>\n      )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}