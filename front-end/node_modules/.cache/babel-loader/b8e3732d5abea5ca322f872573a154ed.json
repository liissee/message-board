{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`; // const Rotate = styled.div`\n// & {\n//   .expand {\n//     transform: rotate(0deg);\n//     margin-left: auto;\n//   }\n//   .expandOpen {\n//     transform: rotate(180deg);\n//   }\n// }\n// `\n\nconst Rotate = styled.div`\n  transform: ${props => props.selected ? \"rotate(0deg)\" : \"rotate(180deg)\"};\n    background: ${props => props.selected ? \"red\" : \"green\"};\n\n  `;\nexport const ToggleComments = ({\n  parentId\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isOpen = _useState4[0],\n        setIsOpen = _useState4[1];\n\n  const dispatch = useDispatch();\n  const messages = useSelector(state => state.messages.messages);\n  const commentList = messages;\n\n  function nestComments(commentList) {\n    const commentMap = {}; // move all the comments into a map of id => comment\n\n    commentList.forEach(comment => commentMap[comment._id] = comment); // iterate over the comments again and correctly nest the children\n\n    commentList.forEach(comment => {\n      if (comment.parentId !== null) {\n        const parent = commentMap[comment.parentId];\n        parent.children = (parent.children || []).push(comment);\n      }\n    }); // filter the list to return a list of correctly nested comments\n\n    return commentList.filter(comment => {\n      return comment.parentId === null;\n    });\n  } // // const handleExpandClick = e => {\n  // //   e.preventDefault();\n  // //   const currentID = e.currentTarget.id;\n  // //   console.log(currentID)\n  // //   const newIsOpenState = expanded[messages._id] = !expanded[messages._id];\n  // //   setExpanded(newIsOpenState);\n  // // };\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // }\n\n\n  return React.createElement(React.Fragment, null);\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ToggleComments.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","Card","styled","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","Main","div","Rotate","props","selected","ToggleComments","parentId","expanded","setExpanded","isOpen","setIsOpen","dispatch","messages","state","commentList","nestComments","commentMap","forEach","comment","_id","parent","children","push","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,MAAMC,IAAI,GAAGT,MAAM,CAACU,GAAI;;;;;;;;;;;CAAxB,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGX,MAAM,CAACU,GAAI;eACXE,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,cAAjB,GAAkC,gBAAkB;kBAC3DD,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,KAAjB,GAAyB,OAAS;;GAF9D;AAMA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACdrB,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,QACvCsB,QADuC;AAAA,QAC7BC,WAD6B;;AAAA,qBAElBvB,QAAQ,CAAC,EAAD,CAFU;AAAA;AAAA,QAEvCwB,MAFuC;AAAA,QAE/BC,SAF+B;;AAK9C,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AAEA,QAAMwB,QAAQ,GAAGzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B;AAEA,QAAME,WAAW,GAAGF,QAApB;;AAEA,WAASG,YAAT,CAAsBD,WAAtB,EAAmC;AACjC,UAAME,UAAU,GAAG,EAAnB,CADiC,CAGjC;;AACAF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,OAAO,IAAIF,UAAU,CAACE,OAAO,CAACC,GAAT,CAAV,GAA0BD,OAAzD,EAJiC,CAMjC;;AACAJ,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,OAAO,IAAI;AAC7B,UAAIA,OAAO,CAACZ,QAAR,KAAqB,IAAzB,EAA+B;AAC7B,cAAMc,MAAM,GAAGJ,UAAU,CAACE,OAAO,CAACZ,QAAT,CAAzB;AACAc,QAAAA,MAAM,CAACC,QAAP,GAAkB,CAACD,MAAM,CAACC,QAAP,IAAmB,EAApB,EAAwBC,IAAxB,CAA6BJ,OAA7B,CAAlB;AACD;AACF,KALD,EAPiC,CAcjC;;AACA,WAAOJ,WAAW,CAACS,MAAZ,CAAmBL,OAAO,IAAI;AACnC,aAAOA,OAAO,CAACZ,QAAR,KAAqB,IAA5B;AACD,KAFM,CAAP;AAGD,GA7B6C,CA+B9C;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AAEA,SACE,yCADF;AAID,CAhDM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components'\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\n\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`\n\n// const Rotate = styled.div`\n// & {\n//   .expand {\n//     transform: rotate(0deg);\n//     margin-left: auto;\n//   }\n//   .expandOpen {\n//     transform: rotate(180deg);\n//   }\n// }\n// `\n\nconst Rotate = styled.div`\n  transform: ${props => (props.selected ? \"rotate(0deg)\" : \"rotate(180deg)\")};\n    background: ${props => (props.selected ? \"red\" : \"green\")};\n\n  `\n\nexport const ToggleComments = ({ parentId }) => {\n  const [expanded, setExpanded] = useState(false)\n  const [isOpen, setIsOpen] = useState({});\n\n\n  const dispatch = useDispatch();\n\n  const messages = useSelector((state) => state.messages.messages)\n\n  const commentList = messages\n\n  function nestComments(commentList) {\n    const commentMap = {};\n\n    // move all the comments into a map of id => comment\n    commentList.forEach(comment => commentMap[comment._id] = comment);\n\n    // iterate over the comments again and correctly nest the children\n    commentList.forEach(comment => {\n      if (comment.parentId !== null) {\n        const parent = commentMap[comment.parentId];\n        parent.children = (parent.children || []).push(comment);\n      }\n    });\n\n    // filter the list to return a list of correctly nested comments\n    return commentList.filter(comment => {\n      return comment.parentId === null;\n    });\n  }\n\n  // // const handleExpandClick = e => {\n  // //   e.preventDefault();\n  // //   const currentID = e.currentTarget.id;\n  // //   console.log(currentID)\n  // //   const newIsOpenState = expanded[messages._id] = !expanded[messages._id];\n  // //   setExpanded(newIsOpenState);\n  // // };\n\n\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // }\n\n  return (\n    <>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}