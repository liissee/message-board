{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Loading.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\n\nconst Main = _styled.div.withConfig({\n  displayName: \"Loading__Main\",\n  componentId: \"sc-15gav5k-0\"\n})([\"margin:20px;display:flex;flex-direction:column;justify-content:center;align-items:center;\"]);\n\nexport const LoadingIndicator = () => {\n  const isLoading = useSelector(state => state.ui.isLoading);\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, isLoading && React.createElement(Loader, {\n    type: \"ThreeDots\",\n    color: \"#00BFFF\",\n    height: 80,\n    width: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Loading.js"],"names":["React","useSelector","Loader","Main","styled","div","LoadingIndicator","isLoading","state","ui"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,IAAI,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,iGAAV;;AAQA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,QAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASF,SAArB,CAA7B;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,IACR,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,MAAM,EAAE,EAAjD;AAAqD,IAAA,KAAK,EAAE,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD,CAVM","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Loader from 'react-loader-spinner'\nimport styled from 'styled-components/macro'\n\nconst Main = styled.div`\nmargin: 20px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`\n\nexport const LoadingIndicator = () => {\n  const isLoading = useSelector((state) => state.ui.isLoading)\n\n  return (\n    <Main>\n      {isLoading && (\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      )}\n    </Main>\n  )\n}"]},"metadata":{},"sourceType":"module"}