{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nimport { DeleteMessage } from './DeleteMessage';\nimport { EditMessage } from './EditMessage';\nimport { MessageCard } from './MessageCard';\nimport moment from \"moment\";\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const ShowMessages = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n  const userName = useSelector(state => state.users.userName);\n  const messages = useSelector(state => state.messages.messages);\n  console.log(messages.message); // const hildMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  }; // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, messages.map(message => React.createElement(MessageCard, {\n    key: message._id,\n    author: message.author,\n    message: message.message,\n    createdAt: moment(message.createdAt).format('ll') // onClickDelete={() => handleConfirmDelete(message)}\n    // onClickEdit={() => handleConfirmEdit(message)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n}; // return (\n//   <Main>\n//     {messages.map((message, index) => (\n//       <Card className=\"messageCard\" key={message._id} selected={index}>\n//         <CardHeader\n//           avatar={\n//             <Avatar aria-label=\"author\">\n//               R\n//           </Avatar>\n//           }\n//           title={message.author}\n//           subheader={<Timestamp createdAt={message.createdAt} />}\n//         />\n//         <DeleteMessage id={message._id} author={message.author} />\n//         <EditMessage id={message._id} author={message.author} message={message.message} />\n//         <CardContent>\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Message: {message.message}\n//           </Typography>\n//           <PostReply parentId={message._id} />\n//           {/* <ToggleComments parentId={message._id} /> */}\n//         </CardContent>\n//         <Rotate>\n//           <IconButton\n//             className={expanded ? \"expandOpen\" : \"expand\"}\n//             onClick={handleExpandClick}\n//             // onClick={() => setExpanded({ expanded: index })}\n//             // selected={this.determineItemStyle(i)}\n//             aria-expanded={expanded}\n//             aria-label=\"show more\"\n//           >\n//             <ExpandMoreIcon />\n//           </IconButton>\n//         </Rotate>\n//         <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n//           <CardContent className=\"replyContainer\">\n//             {message.children && message.children.length && message.children.length > 0 && message.children.map((reply) => (\n//               <CardContent key={reply._id} className=\"replyCard\">\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar aria-label=\"author\">\n//                       R\n//                   </Avatar>\n//                   }\n//                   title={userName}\n//                   subheader={<Timestamp createdAt={reply.createdAt} />}\n//                 />\n//                 <Typography variant=\"body2\" color=\"textSecondary\">{reply.message}</Typography>\n//               </CardContent>\n//             ))}\n//           </CardContent>\n//         </Collapse>\n//       </Card>\n//     ))\n//     }\n//   </Main>\n// )\n// }","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","Card","Button","styled","PostReply","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","DeleteMessage","EditMessage","MessageCard","moment","Main","div","Rotate","ShowMessages","props","expanded","setExpanded","dispatch","userName","state","users","messages","console","log","message","handleExpandClick","map","_id","author","createdAt","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,IAAI,GAAGd,MAAM,CAACe,GAAI;;;;;;;;;;;;;;;;;;;CAAxB;AAqBA,MAAMC,MAAM,GAAGhB,MAAM,CAACe,GAAI;;;;;;;;;;CAA1B;AAYA,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AAAA,oBACLzB,QAAQ,CAAC,IAAD,CADH;AAAA;AAAA,QAC9B0B,QAD8B;AAAA,QACpBC,WADoB;;AAGrC,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,QAAQ,CAACxB,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACwB,QAAD,CAFM,CAAT;AAKA,QAAMC,QAAQ,GAAG3B,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,QAAxB,CAA5B;AACA,QAAMG,QAAQ,GAAG9B,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeA,QAA3B,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,OAArB,EAbqC,CAcrC;AACA;AACA;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BT,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD,CApBqC,CAyBrC;AACA;AACA;AACA;;;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,QAAQ,CAACK,GAAT,CAAaF,OAAO,IACnB,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACG,GADf;AAEE,IAAA,MAAM,EAAEH,OAAO,CAACI,MAFlB;AAGE,IAAA,OAAO,EAAEJ,OAAO,CAACA,OAHnB;AAIE,IAAA,SAAS,EAAEf,MAAM,CAACe,OAAO,CAACK,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,IAAjC,CAJb,CAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAgBD,CA9CM,C,CAiDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\nimport { DeleteMessage } from './DeleteMessage';\nimport { EditMessage } from './EditMessage';\nimport { MessageCard } from './MessageCard';\nimport moment from \"moment\"\n\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\n\nexport const ShowMessages = (props) => {\n  const [expanded, setExpanded] = useState(true)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n\n\n  const userName = useSelector((state) => state.users.userName)\n  const messages = useSelector((state) => state.messages.messages)\n  console.log(messages.message)\n  // const hildMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n  return (\n    <Main>\n      <Card>\n        {messages.map(message => (\n          <MessageCard\n            key={message._id}\n            author={message.author}\n            message={message.message}\n            createdAt={moment(message.createdAt).format('ll')}\n          // onClickDelete={() => handleConfirmDelete(message)}\n          // onClickEdit={() => handleConfirmEdit(message)}\n          />\n        ))}\n      </Card>\n    </Main>\n  )\n}\n\n\n// return (\n//   <Main>\n//     {messages.map((message, index) => (\n//       <Card className=\"messageCard\" key={message._id} selected={index}>\n//         <CardHeader\n//           avatar={\n//             <Avatar aria-label=\"author\">\n//               R\n//           </Avatar>\n//           }\n//           title={message.author}\n//           subheader={<Timestamp createdAt={message.createdAt} />}\n//         />\n//         <DeleteMessage id={message._id} author={message.author} />\n//         <EditMessage id={message._id} author={message.author} message={message.message} />\n//         <CardContent>\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Message: {message.message}\n//           </Typography>\n//           <PostReply parentId={message._id} />\n//           {/* <ToggleComments parentId={message._id} /> */}\n//         </CardContent>\n//         <Rotate>\n//           <IconButton\n//             className={expanded ? \"expandOpen\" : \"expand\"}\n//             onClick={handleExpandClick}\n//             // onClick={() => setExpanded({ expanded: index })}\n//             // selected={this.determineItemStyle(i)}\n//             aria-expanded={expanded}\n//             aria-label=\"show more\"\n//           >\n//             <ExpandMoreIcon />\n//           </IconButton>\n//         </Rotate>\n//         <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n//           <CardContent className=\"replyContainer\">\n//             {message.children && message.children.length && message.children.length > 0 && message.children.map((reply) => (\n//               <CardContent key={reply._id} className=\"replyCard\">\n//                 <CardHeader\n//                   avatar={\n//                     <Avatar aria-label=\"author\">\n//                       R\n//                   </Avatar>\n//                   }\n//                   title={userName}\n//                   subheader={<Timestamp createdAt={reply.createdAt} />}\n//                 />\n//                 <Typography variant=\"body2\" color=\"textSecondary\">{reply.message}</Typography>\n//               </CardContent>\n//             ))}\n//           </CardContent>\n//         </Collapse>\n//       </Card>\n//     ))\n//     }\n//   </Main>\n// )\n// }\n"]},"metadata":{},"sourceType":"module"}