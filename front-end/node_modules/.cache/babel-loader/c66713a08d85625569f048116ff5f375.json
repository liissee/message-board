{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostMessage } from './PostMessage';\nimport { ReplyMessage } from './ReplyMessage';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`; // const Card = styled.div`\n// width: 400px;\n// /* border: 1px solid lightgrey; */\n// `\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const ShowMessages = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1]; // const [selectedPost, setSelectedPost] = useState({})\n\n\n  const dispatch = useDispatch(); // const handleExpandClick = () => {\n  //   setExpanded({ selectedItem: i })\n  // };\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n  const messages = useSelector(state => state.messages.messages);\n  console.log(messages[0]);\n  messages.forEach(message => expanded.push({\n    messageId: message._id,\n    index: false\n  })); //I suppose you can get an id or similar identifers\n\n  const handleExpandClick = e => {\n    e.preventDefault();\n    const currentID = e.currentTarget.id;\n    console.log(currentID);\n    const newIsOpenState = expanded[message._id] = !expanded[message._id];\n    setExpanded(newIsOpenState);\n  }; // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // };\n\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(PostMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), messages.map((message, index) => React.createElement(Card, {\n    className: \"messageCard\",\n    key: message._id,\n    id: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"R\"),\n    title: message.author,\n    subheader: React.createElement(Timestamp, {\n      createdAt: message.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(ReplyMessage, {\n    parentId: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Rotate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: expanded ? \"expandOpen\" : \"expand\",\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), React.createElement(Collapse, {\n    in: expanded[index],\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Replies:\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\")))))) // <MessageBox>\n  //   <PostMessage />\n  //   {messages.map((message) => (\n  //     <Card className=\"messageCard\" key={message._id}>\n  //       <div>Message: {message.message}</div>\n  //       <div>Author: {message.author}</div>\n  //       <div>Time: {message.createdAt}</div>\n  //       <ReplyMessage id={message._id} />\n  //     </Card>\n  //   ))}\n  // </MessageBox>\n  ;\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","Card","styled","PostMessage","ReplyMessage","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","Main","div","Rotate","ShowMessages","props","expanded","setExpanded","dispatch","messages","state","console","log","forEach","message","push","messageId","_id","index","handleExpandClick","e","preventDefault","currentID","currentTarget","id","newIsOpenState","map","author","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages } from 'reducers/messages';\nimport { Card } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostMessage } from './PostMessage';\nimport { ReplyMessage } from './ReplyMessage';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\n\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n}\n}\n`\n// const Card = styled.div`\n// width: 400px;\n// /* border: 1px solid lightgrey; */\n// `\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\n\nexport const ShowMessages = (props) => {\n  const [expanded, setExpanded] = useState([])\n  // const [selectedPost, setSelectedPost] = useState({})\n\n  const dispatch = useDispatch();\n\n  // const handleExpandClick = () => {\n  //   setExpanded({ selectedItem: i })\n  // };\n\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n\n  const messages = useSelector((state) => state.messages.messages)\n  console.log(messages[0])\n\n  messages.forEach(message => expanded.push({ messageId: message._id, index: false }))\n  //I suppose you can get an id or similar identifers\n\n\n  const handleExpandClick = e => {\n    e.preventDefault();\n    const currentID = e.currentTarget.id;\n    console.log(currentID)\n    const newIsOpenState = expanded[message._id] = !expanded[message._id];\n    setExpanded(newIsOpenState);\n  };\n\n  // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n  // const handleExpandClick = () => {\n  //   setExpanded(!expanded);\n  // };\n\n  return (\n    <Main>\n      <PostMessage />\n      {messages.map((message, index) => (\n        <Card className=\"messageCard\" key={message._id} id={index}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"author\">\n                R\n          </Avatar>\n            }\n            title={message.author}\n            subheader={<Timestamp createdAt={message.createdAt} />}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n              Message: {message.message}\n            </Typography>\n            <ReplyMessage parentId={message._id} />\n          </CardContent>\n          <Rotate>\n            <IconButton\n              className={expanded ? \"expandOpen\" : \"expand\"}\n              onClick={handleExpandClick}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Rotate>\n\n          <Collapse in={expanded[index]} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography>Replies:</Typography>\n              <Typography>\n                Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n                set aside for 10 minutes.\n          </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))}\n    </Main>\n\n\n    // <MessageBox>\n    //   <PostMessage />\n\n    //   {messages.map((message) => (\n    //     <Card className=\"messageCard\" key={message._id}>\n    //       <div>Message: {message.message}</div>\n    //       <div>Author: {message.author}</div>\n    //       <div>Time: {message.createdAt}</div>\n    //       <ReplyMessage id={message._id} />\n\n    //     </Card>\n    //   ))}\n    // </MessageBox>\n  )\n}"]},"metadata":{},"sourceType":"module"}