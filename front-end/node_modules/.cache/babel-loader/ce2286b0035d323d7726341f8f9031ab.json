{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nimport { DeleteMessage } from './DeleteMessage';\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const ShowMessages = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n  const userName = useSelector(state => state.users.userName);\n  const messages = useSelector(state => state.messages.messages); // const childMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  }; // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, messages.map((message, index) => React.createElement(Card, {\n    className: \"messageCard\",\n    key: message._id,\n    selected: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"R\"),\n    title: message.author,\n    subheader: React.createElement(Timestamp, {\n      createdAt: message.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(DeleteMessage, {\n    id: message._id,\n    author: message.author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(PostReply, {\n    parentId: message._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Rotate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: expanded ? \"expandOpen\" : \"expand\",\n    onClick: handleExpandClick // onClick={() => setExpanded({ expanded: index })}\n    // selected={this.determineItemStyle(i)}\n    ,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: \"replyContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, message.children && message.children.length && message.children.length > 0 && message.children.map(reply => React.createElement(CardContent, {\n    key: reply._id,\n    className: \"replyCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"R\"),\n    title: userName,\n    subheader: React.createElement(Timestamp, {\n      createdAt: reply.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, reply.message))))))));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ShowMessages.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","Card","Button","styled","PostReply","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","DeleteMessage","Main","div","Rotate","ShowMessages","props","expanded","setExpanded","dispatch","userName","state","users","messages","handleExpandClick","map","message","index","_id","author","createdAt","children","length","reply"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\nimport { DeleteMessage } from './DeleteMessage';\n\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\n\nexport const ShowMessages = (props) => {\n  const [expanded, setExpanded] = useState(true)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchMessages());\n  }, [dispatch]);\n\n\n  const userName = useSelector((state) => state.users.userName)\n  const messages = useSelector((state) => state.messages.messages)\n\n  // const childMessages: IMessage[] = messages.filter(\n  //   (message: IMessage) => message.parentId === currentMessage.id\n  // );\n\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  // const selectedMessageId = messages._id;\n  // const isMessageSelected = messages._id === selectedMessageId;\n  // console.log(\"id\", messages._id)\n  // console.log(\"selecetd\", isMessageSelected)\n\n  return (\n    <Main>\n      {messages.map((message, index) => (\n        <Card className=\"messageCard\" key={message._id} selected={index}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"author\">\n                R\n          </Avatar>\n            }\n            title={message.author}\n            subheader={<Timestamp createdAt={message.createdAt} />}\n          />\n          <DeleteMessage id={message._id} author={message.author} />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Message: {message.message}\n            </Typography>\n            <PostReply parentId={message._id} />\n            {/* <ToggleComments parentId={message._id} /> */}\n          </CardContent>\n          <Rotate>\n            <IconButton\n              className={expanded ? \"expandOpen\" : \"expand\"}\n              onClick={handleExpandClick}\n              // onClick={() => setExpanded({ expanded: index })}\n              // selected={this.determineItemStyle(i)}\n              aria-expanded={expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </Rotate>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent className=\"replyContainer\">\n              {message.children && message.children.length && message.children.length > 0 && message.children.map((reply) => (\n                <CardContent key={reply._id} className=\"replyCard\">\n                  <CardHeader\n                    avatar={\n                      <Avatar aria-label=\"author\">\n                        R\n                  </Avatar>\n                    }\n                    title={userName}\n                    subheader={<Timestamp createdAt={reply.createdAt} />}\n                  />\n                  <Typography variant=\"body2\" color=\"textSecondary\">{reply.message}</Typography>\n                </CardContent>\n              ))}\n            </CardContent>\n          </Collapse>\n        </Card>\n      ))\n      }\n    </Main>\n  )\n}"]},"metadata":{},"sourceType":"module"}