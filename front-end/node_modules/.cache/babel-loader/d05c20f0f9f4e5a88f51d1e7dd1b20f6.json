{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: [],\n  userName: localStorage.userName || \"\",\n  accessToken: localStorage.accessToken || \"\",\n  userId: localStorage.userId || \"\"\n};\nexport const users = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload;\n      window.localStorage.setItem('accessToken', action.payload);\n    },\n    removeAccessToken: (state, action) => {\n      state.accessToken = \"\";\n      window.localStorage.removeItem('accessToken', action.payload);\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n      window.localStorage.setItem('userId', action.payload);\n    },\n    removeUserId: (state, action) => {\n      state.userId = \"\";\n      window.localStorage.removeItem('userId', action.payload);\n    },\n    setUserName: (state, action) => {\n      state.userName = action.payload;\n      window.localStorage.setItem('userName', action.payload);\n    },\n    removeUserName: (state, action) => {\n      state.userName = \"\";\n      window.localStorage.removeItem('userName', action.payload);\n    },\n    setUser: (state, action) => {\n      state.users = action.payload;\n    }\n  }\n});\nconst url = 'https://final-movie-match.herokuapp.com/sessions';\nexport const fetchUser = ({\n  email,\n  password\n}) => {\n  return dispatch => {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Your e-mail and/or password was incorrect\");\n      } else {\n        return res.json();\n      }\n    }).then(({\n      accessToken,\n      userId,\n      name\n    }) => {\n      if (accessToken && userId && name) {\n        dispatch(users.actions.setAccessToken(accessToken));\n        dispatch(users.actions.setUserName(name));\n        dispatch(users.actions.setUserId(userId));\n        dispatch(ui.actions.setLoginFailed(false));\n      }\n    }).catch(err => dispatch(ui.actions.setLoginFailed(true)));\n  };\n}; // Takes searchterm as a prop/argument and send search result to MoveList.js. \n\nexport const searchResult = userName => {\n  return dispatch => {\n    fetch(`https://final-movie-match.herokuapp.com/users/:userId/allUsers?name=${userName}`).then(res => res.json()).then(json => {\n      dispatch(users.actions.setUser(json));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/reducers/users.js"],"names":["createSlice","initialState","users","userName","localStorage","accessToken","userId","name","reducers","setAccessToken","state","action","payload","window","setItem","removeAccessToken","removeItem","setUserId","removeUserId","setUserName","removeUserName","setUser","url","fetchUser","email","password","dispatch","fetch","method","body","JSON","stringify","headers","then","res","ok","Error","json","actions","ui","setLoginFailed","catch","err","searchResult"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  users: [],\n  userName: localStorage.userName || \"\",\n  accessToken: localStorage.accessToken || \"\",\n  userId: localStorage.userId || \"\"\n}\n\n\nexport const users = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload\n      window.localStorage.setItem('accessToken', action.payload)\n    },\n    removeAccessToken: (state, action) => {\n      state.accessToken = \"\"\n      window.localStorage.removeItem('accessToken', action.payload)\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload\n      window.localStorage.setItem('userId', action.payload)\n    },\n    removeUserId: (state, action) => {\n      state.userId = \"\"\n      window.localStorage.removeItem('userId', action.payload)\n    },\n    setUserName: (state, action) => {\n      state.userName = action.payload\n      window.localStorage.setItem('userName', action.payload)\n    },\n    removeUserName: (state, action) => {\n      state.userName = \"\"\n      window.localStorage.removeItem('userName', action.payload)\n    },\n    setUser: (state, action) => {\n      state.users = action.payload\n    }\n  }\n})\n\n\nconst url = 'https://final-movie-match.herokuapp.com/sessions'\n\n\nexport const fetchUser = ({ email, password }) => {\n  return dispatch => {\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Your e-mail and/or password was incorrect\")\n        } else {\n          return res.json();\n        }\n      })\n      .then(({ accessToken, userId, name }) => {\n        if (accessToken && userId && name) {\n          dispatch(users.actions.setAccessToken(accessToken))\n          dispatch(users.actions.setUserName(name))\n          dispatch(users.actions.setUserId(userId))\n          dispatch(ui.actions.setLoginFailed(false))\n        }\n\n      })\n      .catch(err => dispatch(ui.actions.setLoginFailed(true)))\n\n  }\n}\n\n\n// Takes searchterm as a prop/argument and send search result to MoveList.js. \nexport const searchResult = (userName) => {\n  return dispatch => {\n    fetch(`https://final-movie-match.herokuapp.com/users/:userId/allUsers?name=${userName}`)\n      .then(res => res.json())\n      .then(json => {\n        dispatch(users.actions.setUser(json))\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}