{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nexport const Login = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        userName = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        registred = _useState8[0],\n        setRegistred = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        failure = _useState10[0],\n        setFailure = _useState10[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        userName,\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 201) {\n        return res.json().then(json => console.log(json.message)), setFailure(true);\n      } else {\n        setRegistred(true);\n        setTimeout(reDirect, 2000);\n      }\n    }).catch(err => console.log(\"Error:\", err));\n  };\n\n  const reDirect = () => {// history.push(`/login`)\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, userName.length < 2 && userName.length !== 0 && \" is too short\", userName.length > 20 && \" is too long\", React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"name\",\n    label: \"User name\",\n    name: \"name\",\n    required: true,\n    fullWidth: true,\n    type: \"text\",\n    value: userName,\n    onChange: event => setUserName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoFocus: true,\n    lowercase: true,\n    type: \"text\",\n    value: email,\n    onChange: event => setEmail(event.target.value.toLowerCase()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, password.length < 5 && password.length !== 0 && \" is too short\", React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: userName.length > 1 && userName.length < 21 && password.length > 4 && email ? false : true,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"SIGN UP\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: reDirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Already a member?\"));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/Login.js"],"names":["React","useState","Button","TextField","styled","Login","userName","setUserName","password","setPassword","email","setEmail","registred","setRegistred","failure","setFailure","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","json","console","log","message","setTimeout","reDirect","catch","err","length","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core'\nimport styled from 'styled-components'\n\n\n\nexport const Login = () => {\n  const [userName, setUserName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [registred, setRegistred] = useState(false)\n  const [failure, setFailure] = useState(false)\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"http://localhost:8080/users\", {\n      method: \"POST\",\n      body: JSON.stringify({ userName, email, password }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(res => {\n        if (res.status !== 201) {\n          return (\n            res.json().then(json => console.log(json.message)), setFailure(true)\n          )\n        } else {\n          setRegistred(true)\n          setTimeout(reDirect, 2000);\n        }\n      })\n      .catch(err => console.log(\"Error:\", err))\n  }\n\n  const reDirect = () => {\n    // history.push(`/login`)\n  }\n\n  return (\n    <div>\n      {userName.length < 2 && userName.length !== 0 && \" is too short\"}\n      {userName.length > 20 && \" is too long\"}\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        id=\"name\"\n        label=\"User name\"\n        name=\"name\"\n        required\n        fullWidth\n        type=\"text\"\n        value={userName}\n        onChange={event => setUserName(event.target.value)}\n      ></TextField>\n\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        autoFocus\n        lowercase\n        type=\"text\"\n        value={email}\n        onChange={event => setEmail(event.target.value.toLowerCase())}\n      ></TextField>\n      <div>\n        {password.length < 5 && password.length !== 0 && \" is too short\"}\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={event => setPassword(event.target.value)}\n        ></TextField>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        disabled={\n          userName.length > 1 &&\n            userName.length < 21 &&\n            password.length > 4 &&\n            email\n            ? false\n            : true\n        }\n        onClick={handleSubmit}\n      >\n        SIGN UP\n            </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"button\" onClick={reDirect}>\n        Already a member?\n            </Button>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}