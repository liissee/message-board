{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ReplyMessage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { replyMessage } from 'reducers/messages';\nimport { Card, Input, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nconst Form = styled.div`\ndisplay: flex;\nflex-direction:column;\ncolor: white;\nbackground: green;\n`;\nconst RepliesWrapper = styled.div`\ndisplay: flex;\nflex-direction:column;\ncolor: white;\nbackground: green;\n`;\nexport const ReplyMessage = ({\n  parentId\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const dispatch = useDispatch();\n  const messages = useSelector(state => state.messages.messages);\n  console.log(messages); // useEffect(() => {\n  //   dispatch(postMessages());\n  // }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(replyMessage({\n      message,\n      author,\n      parentId\n    }));\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Reply\", React.createElement(\"input\", {\n    type: \"message\",\n    required: true,\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"Author\", React.createElement(\"input\", {\n    type: \"author\",\n    required: true,\n    value: author,\n    onChange: event => setAuthor(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Post reply\"), React.createElement(RepliesWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Message: \", message.message), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Author: \", message.author), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Time: \", message.createdAt)));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/ReplyMessage.js"],"names":["React","useState","useEffect","useSelector","useDispatch","replyMessage","Card","Input","Button","styled","Form","div","RepliesWrapper","ReplyMessage","parentId","message","setMessage","author","setAuthor","dispatch","messages","state","console","log","handleSubmit","event","preventDefault","target","value","createdAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;CAAxB;AAMA,MAAMC,cAAc,GAAGH,MAAM,CAACE,GAAI;;;;;CAAlC;AAOA,OAAO,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACdb,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACrCc,OADqC;AAAA,QAC5BC,UAD4B;;AAAA,qBAEhBf,QAAQ,CAAC,EAAD,CAFQ;AAAA;AAAA,QAErCgB,MAFqC;AAAA,QAE7BC,SAF6B;;AAG5C,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,QAAQ,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeA,QAA3B,CAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAN4C,CAQ5C;AACA;AACA;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAACd,YAAY,CAAC;AAAEU,MAAAA,OAAF;AAAWE,MAAAA,MAAX;AAAmBH,MAAAA;AAAnB,KAAD,CAAb,CAAR;AACD,GAHD;;AAMA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAEC,OAHT;AAIE,IAAA,QAAQ,EAAEU,KAAK,IAAIT,UAAU,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,YASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAEX,MAHT;AAIE,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,SAAS,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,EAkBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeT,OAAO,CAACA,OAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcA,OAAO,CAACE,MAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYF,OAAO,CAACc,SAApB,CAHF,CAlBF,CADF;AA0BD,CA5CM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { replyMessage } from 'reducers/messages';\nimport { Card, Input, Button } from '@material-ui/core';\nimport styled from 'styled-components'\n\nconst Form = styled.div`\ndisplay: flex;\nflex-direction:column;\ncolor: white;\nbackground: green;\n`\nconst RepliesWrapper = styled.div`\ndisplay: flex;\nflex-direction:column;\ncolor: white;\nbackground: green;\n`\n\nexport const ReplyMessage = ({ parentId }) => {\n  const [message, setMessage] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const dispatch = useDispatch();\n\n  const messages = useSelector((state) => state.messages.messages)\n  console.log(messages)\n\n  // useEffect(() => {\n  //   dispatch(postMessages());\n  // }, [dispatch]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    dispatch(replyMessage({ message, author, parentId }))\n  }\n\n\n  return (\n    <Form>\n      Reply\n      <input\n        type=\"message\"\n        required\n        value={message}\n        onChange={event => setMessage(event.target.value)}\n      />\n          Author\n      <input\n        type=\"author\"\n        required\n        value={author}\n        onChange={event => setAuthor(event.target.value)}\n      />\n      <button type=\"submit\" onClick={handleSubmit}>\n        Post reply\n        </button>\n      <RepliesWrapper>\n        <div>Message: {message.message}</div>\n        <div>Author: {message.author}</div>\n        <div>Time: {message.createdAt}</div>\n      </RepliesWrapper>\n    </Form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}