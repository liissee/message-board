{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/MessageCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp';\nimport { DeleteMessage } from './DeleteMessage';\nimport { EditMessage } from './EditMessage';\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`;\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`;\nexport const MessageCard = ({\n  id,\n  message,\n  author,\n  createdAt,\n  onClickEdit,\n  onClickDelete\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"messageCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"R\"),\n    title: author,\n    subheader: createdAt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(DeleteMessage, {\n    id: id,\n    author: author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(EditMessage, {\n    id: id,\n    author: author,\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(PostReply, {\n    parentId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))) //   {messages.map((message, index) => (\n  //     <Card className=\"messageCard\" key={message._id} selected={index}>\n  //       <CardHeader\n  //         avatar={\n  //           <Avatar aria-label=\"author\">\n  //             R\n  //       </Avatar>\n  //         }\n  //         title={message.author}\n  //         subheader={<Timestamp createdAt={message.createdAt} />}\n  //       />\n  //       <DeleteMessage id={message._id} author={message.author} />\n  //       <EditMessage id={message._id} author={message.author} message={message.message} />\n  //       <CardContent>\n  //         <Typography variant=\"body2\" color=\"textSecondary\">\n  //           Message: {message.message}\n  //         </Typography>\n  //         <PostReply parentId={message._id} />\n  //         {/* <ToggleComments parentId={message._id} /> */}\n  //       </CardContent>\n  //       <Rotate>\n  //         <IconButton\n  //           className={expanded ? \"expandOpen\" : \"expand\"}\n  //           onClick={handleExpandClick}\n  //           // onClick={() => setExpanded({ expanded: index })}\n  //           // selected={this.determineItemStyle(i)}\n  //           aria-expanded={expanded}\n  //           aria-label=\"show more\"\n  //         >\n  //           <ExpandMoreIcon />\n  //         </IconButton>\n  //       </Rotate>\n  //       <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n  //         <CardContent className=\"replyContainer\">\n  //           {message.children && message.children.length && message.children.length > 0 && message.children.map((reply) => (\n  //             <CardContent key={reply._id} className=\"replyCard\">\n  //               <CardHeader\n  //                 avatar={\n  //                   <Avatar aria-label=\"author\">\n  //                     R\n  //               </Avatar>\n  //                 }\n  //                 title={userName}\n  //                 subheader={<Timestamp createdAt={reply.createdAt} />}\n  //               />\n  //               <Typography variant=\"body2\" color=\"textSecondary\">{reply.message}</Typography>\n  //             </CardContent>\n  //           ))}\n  //         </CardContent>\n  //       </Collapse>\n  //     </Card>\n  //   ))\n  //   }\n  // </Main>\n  ;\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/MessageCard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchMessages","Card","Button","styled","PostReply","CardHeader","CardContent","Collapse","Avatar","IconButton","Typography","ExpandMoreIcon","Timestamp","DeleteMessage","EditMessage","Main","div","Rotate","MessageCard","id","message","author","createdAt","onClickEdit","onClickDelete","expanded","setExpanded","handleExpandClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,GAAI;;;;;;;;;;;;;;;;;;;CAAxB;AAqBA,MAAMC,MAAM,GAAGd,MAAM,CAACa,GAAI;;;;;;;;;;CAA1B;AAYA,OAAO,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,WAAlC;AAA+CC,EAAAA;AAA/C,CAAD,KAAoE;AAAA,oBAC7D5B,QAAQ,CAAC,IAAD,CADqD;AAAA;AAAA,QACtF6B,QADsF;AAAA,QAC5EC,WAD4E;;AAG7F,QAAMC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAKA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,MAAM,EACJ,oBAAC,MAAD;AAAQ,oBAAW,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAME,IAAA,KAAK,EAAEJ,MANT;AAOE,IAAA,SAAS,EAAEC,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAEH,EAAnB;AAAuB,IAAA,MAAM,EAAEE,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEF,EAAjB;AAAqB,IAAA,MAAM,EAAEE,MAA7B;AAAqC,IAAA,OAAO,EAAED,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAED,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF,CAiBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEF;AAwED,CAhFM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchMessages } from 'reducers/messages';\nimport { Card, Button } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { PostReply } from './PostReply';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Timestamp } from 'components/Timestamp'\nimport { DeleteMessage } from './DeleteMessage';\nimport { EditMessage } from './EditMessage';\n\nconst Main = styled.div`\n/* display: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center; */\n& {\n.messageCard {\n  margin: 10px;\n  width: 400px;\n  }\n.replyContainer {\n  padding: 0px;\n  padding-bottom: 0;\n  margin: 0px;\n}\n.replyCard {\n  border: lightgrey solid 1px;\n  }\n}\n`\n\nconst Rotate = styled.div`\n& {\n  .expand {\n    transform: rotate(0deg);\n    margin-left: auto;\n  }\n  .expandOpen {\n    transform: rotate(180deg);\n  }\n}\n`\n\nexport const MessageCard = ({ id, message, author, createdAt, onClickEdit, onClickDelete }) => {\n  const [expanded, setExpanded] = useState(true)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  return (\n    <Main>\n      <Card className=\"messageCard\">\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"author\">\n              R\n          </Avatar>\n          }\n          title={author}\n          subheader={createdAt}\n        />\n        <DeleteMessage id={id} author={author} />\n        <EditMessage id={id} author={author} message={message} />\n        <PostReply parentId={id} />\n      </Card>\n    </Main>\n    //   {messages.map((message, index) => (\n    //     <Card className=\"messageCard\" key={message._id} selected={index}>\n    //       <CardHeader\n    //         avatar={\n    //           <Avatar aria-label=\"author\">\n    //             R\n    //       </Avatar>\n    //         }\n    //         title={message.author}\n    //         subheader={<Timestamp createdAt={message.createdAt} />}\n    //       />\n    //       <DeleteMessage id={message._id} author={message.author} />\n    //       <EditMessage id={message._id} author={message.author} message={message.message} />\n    //       <CardContent>\n    //         <Typography variant=\"body2\" color=\"textSecondary\">\n    //           Message: {message.message}\n    //         </Typography>\n    //         <PostReply parentId={message._id} />\n    //         {/* <ToggleComments parentId={message._id} /> */}\n    //       </CardContent>\n    //       <Rotate>\n    //         <IconButton\n    //           className={expanded ? \"expandOpen\" : \"expand\"}\n    //           onClick={handleExpandClick}\n    //           // onClick={() => setExpanded({ expanded: index })}\n    //           // selected={this.determineItemStyle(i)}\n    //           aria-expanded={expanded}\n    //           aria-label=\"show more\"\n    //         >\n    //           <ExpandMoreIcon />\n    //         </IconButton>\n    //       </Rotate>\n    //       <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n    //         <CardContent className=\"replyContainer\">\n    //           {message.children && message.children.length && message.children.length > 0 && message.children.map((reply) => (\n    //             <CardContent key={reply._id} className=\"replyCard\">\n    //               <CardHeader\n    //                 avatar={\n    //                   <Avatar aria-label=\"author\">\n    //                     R\n    //               </Avatar>\n    //                 }\n    //                 title={userName}\n    //                 subheader={<Timestamp createdAt={reply.createdAt} />}\n    //               />\n    //               <Typography variant=\"body2\" color=\"textSecondary\">{reply.message}</Typography>\n    //             </CardContent>\n    //           ))}\n    //         </CardContent>\n    //       </Collapse>\n    //     </Card>\n    //   ))\n    //   }\n    // </Main>\n  )\n}"]},"metadata":{},"sourceType":"module"}