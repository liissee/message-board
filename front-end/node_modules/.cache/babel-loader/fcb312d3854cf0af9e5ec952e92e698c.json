{"ast":null,"code":"import _slicedToArray from \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/EditMessage.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editMessages } from 'reducers/messages';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport styled from 'styled-components';\nimport EdiText from \"react-editext\";\nexport const EditMessage = ({\n  id,\n  author,\n  message\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        newValue = _useState2[0],\n        setNewValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editing = _useState4[0],\n        setEditing = _useState4[1];\n\n  const dispatch = useDispatch();\n\n  const handleEdit = newValue => {\n    setNewValue(newValue);\n    dispatch(editMessages({\n      id,\n      author,\n      newValue\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(EdiText, {\n    value: message,\n    type: \"text\",\n    onSave: handleEdit,\n    editing: editing,\n    editButtonContent: \"\",\n    hideIcons: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    \"aria-label\": \"edit\",\n    onClick: () => setEditing(!editing),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/lindaisell/Desktop/technigo-bootcamp/message-board/front-end/src/components/EditMessage.js"],"names":["React","useState","useDispatch","editMessages","IconButton","EditIcon","styled","EdiText","EditMessage","id","author","message","newValue","setNewValue","editing","setEditing","dispatch","handleEdit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA,oBACtBV,QAAQ,EADc;AAAA;AAAA,QAC/CW,QAD+C;AAAA,QACrCC,WADqC;;AAAA,qBAExBZ,QAAQ,CAAC,KAAD,CAFgB;AAAA;AAAA,QAE/Ca,OAF+C;AAAA,QAEtCC,UAFsC;;AAItD,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,UAAU,GAAIL,QAAD,IAAc;AAC/BC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAI,IAAAA,QAAQ,CAACb,YAAY,CAAC;AAAEM,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcE,MAAAA;AAAd,KAAD,CAAb,CAAR;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAED,OADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAEM,UAHV;AAIE,IAAA,OAAO,EAAEH,OAJX;AAKE,IAAA,iBAAiB,EAAC,EALpB;AAME,IAAA,SAAS,EAAE,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AA8BD,CAzCM","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { editMessages } from 'reducers/messages';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport styled from 'styled-components'\nimport EdiText from \"react-editext\";\n\n\nexport const EditMessage = ({ id, author, message }) => {\n  const [newValue, setNewValue] = useState()\n  const [editing, setEditing] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleEdit = (newValue) => {\n    setNewValue(newValue)\n    dispatch(editMessages({ id, author, newValue }))\n  }\n\n  return (\n    <div>\n      <EdiText\n        value={message}\n        type=\"text\"\n        onSave={handleEdit}\n        editing={editing}\n        editButtonContent=\"\"\n        hideIcons={true}\n      />\n\n      <IconButton aria-label=\"edit\" onClick={() => setEditing(!editing)}>\n        <EditIcon />\n      </IconButton>\n\n      {/* <Button variant=\"contained\" onClick={() => setEditing(!editing)}>Edit</Button> */}\n\n      {/* <EdiText\n        value={message}\n        type=\"textarea\"\n        inputProps={{ rows: 5 }}\n        onSave={handleEdit}\n        editing={editing}\n        hideIcons={true}\n        saveButtonContent=\"Save\"\n        cancelButtonContent=\"Cancel\"\n        editButtonContent=\"Edit message\"\n      /> */}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}